<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Gabygoole's blog]]></title>
  <subtitle><![CDATA[poetry,beauty,romance,love,these are what we stay alive for.]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://gabygoole.com/"/>
  <updated>2016-04-10T05:16:52.722Z</updated>
  <id>http://gabygoole.com/</id>
  
  <author>
    <name><![CDATA[GabyGoole]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[博客迁回]]></title>
    <link href="http://gabygoole.com/2016/04/10/%E5%8D%9A%E5%AE%A2%E8%BF%81%E5%9B%9E/"/>
    <id>http://gabygoole.com/2016/04/10/博客迁回/</id>
    <published>2016-04-10T05:06:47.000Z</published>
    <updated>2016-04-10T05:16:52.722Z</updated>
    <content type="html"><![CDATA[<p>由于博客阅读量太小，因而迁回<a href="http://www.cnblogs.com/gabygoole/" target="_blank" rel="external">博客园</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>由于博客阅读量太小，因而迁回<a href="http://www.cnblogs.com/gabygoole/" target="_blank" rel="external">博客园</a></p>
]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[c语言结构体排序示例程序]]></title>
    <link href="http://gabygoole.com/2015/12/27/c%E8%AF%AD%E8%A8%80%E7%BB%93%E6%9E%84%E4%BD%93%E6%8E%92%E5%BA%8F%E7%A4%BA%E4%BE%8B%E7%A8%8B%E5%BA%8F/"/>
    <id>http://gabygoole.com/2015/12/27/c语言结构体排序示例程序/</id>
    <published>2015-12-27T12:35:37.000Z</published>
    <updated>2015-12-27T12:38:19.484Z</updated>
    <content type="html"><![CDATA[<p>设计性实验<br>编程实现对学生成绩表的相关信息排序。<br>实验要求：<br>⑴ 建立一个由n个学生的考试成绩表，每条信息由学号、姓名和分数组成。<br>⑵ 按学号排序，并输出排序结果。<br>⑶ 按分数排序，分数相同的则按学号有序，并输出排序结果。<br>⑷ 排序方法及学生成绩表的存储结构不作限制，学生选择性能较好的即可。<br><a id="more"></a></p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> MaxSize <span class="number">50</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> Stu&#123;</span><br><span class="line">        <span class="keyword">char</span> *name;</span><br><span class="line">        <span class="keyword">int</span> id;</span><br><span class="line">        <span class="keyword">int</span> grade;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//按照学号排序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span></span><br><span class="line"><span class="title">sortById</span><span class="params">(<span class="keyword">struct</span> Stu arr[<span class="number">5</span>])</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span> *a, <span class="keyword">const</span> <span class="keyword">void</span> *b)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (*(<span class="keyword">struct</span> Stu *)a).id &gt; (*(<span class="keyword">struct</span> Stu *)b).id ? <span class="number">1</span>:-<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    qsort(arr,<span class="number">5</span>,<span class="keyword">sizeof</span>(arr[<span class="number">0</span>]),cmp);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"按学号排序：\n"</span>);</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s %d %d\n"</span>,arr[i].name,arr[i].id,arr[i].grade);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//先按成绩后按学号</span></span><br><span class="line"><span class="function"><span class="keyword">void</span></span><br><span class="line"><span class="title">sortByGradeAndId</span><span class="params">(<span class="keyword">struct</span> Stu arr[<span class="number">5</span>])</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Comp</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span> *p1,<span class="keyword">const</span> <span class="keyword">void</span> *p2)</span></span><br><span class="line">    </span>&#123;</span><br><span class="line">        <span class="keyword">struct</span> Stu *c=(<span class="keyword">struct</span> Stu *)p1;</span><br><span class="line">        <span class="keyword">struct</span> Stu *d=(<span class="keyword">struct</span> Stu *)p2;</span><br><span class="line">        <span class="keyword">if</span>(c-&gt;grade!=d-&gt;grade)</span><br><span class="line">                <span class="keyword">return</span> c-&gt;grade-d-&gt;grade;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> d-&gt;id - c-&gt;id;</span><br><span class="line">    &#125;</span><br><span class="line">    qsort(arr,<span class="number">5</span>,<span class="keyword">sizeof</span>(arr[<span class="number">0</span>]),Comp);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"先按成绩后按学号:\n"</span>);</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s %d %d\n"</span>,arr[i].name,arr[i].id,arr[i].grade);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">struct</span> Stu arrOfStudent[<span class="number">5</span>] = &#123;</span><br><span class="line">        &#123;<span class="string">"郭佳乐"</span>, <span class="number">20140356</span>, <span class="number">50</span>&#125;,</span><br><span class="line">        &#123;<span class="string">"张三"</span>, <span class="number">20140376</span>, <span class="number">53</span>&#125;,</span><br><span class="line">        &#123;<span class="string">"李四"</span>, <span class="number">20140279</span>, <span class="number">33</span>&#125;,</span><br><span class="line">        &#123;<span class="string">"网二麻子"</span>, <span class="number">20140367</span>, <span class="number">53</span>&#125;,</span><br><span class="line">        &#123;<span class="string">"隔壁老王"</span>, <span class="number">20140255</span>, <span class="number">89</span>&#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    sortById(arrOfStudent);</span><br><span class="line">    sortByGradeAndId(arrOfStudent);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>设计性实验<br>编程实现对学生成绩表的相关信息排序。<br>实验要求：<br>⑴ 建立一个由n个学生的考试成绩表，每条信息由学号、姓名和分数组成。<br>⑵ 按学号排序，并输出排序结果。<br>⑶ 按分数排序，分数相同的则按学号有序，并输出排序结果。<br>⑷ 排序方法及学生成绩表的存储结构不作限制，学生选择性能较好的即可。<br>]]>
    
    </summary>
    
      <category term="C" scheme="http://gabygoole.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[数据存储-持久化技术]]></title>
    <link href="http://gabygoole.com/2015/12/23/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8-%E6%8C%81%E4%B9%85%E5%8C%96%E6%8A%80%E6%9C%AF/"/>
    <id>http://gabygoole.com/2015/12/23/数据存储-持久化技术/</id>
    <published>2015-12-23T15:23:32.000Z</published>
    <updated>2015-12-23T15:46:30.280Z</updated>
    <content type="html"><![CDATA[<h3 id="使用文件存储数据">使用文件存储数据</h3><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span>(<span class="params">String inputText</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">       FileOutputStream <span class="keyword">out</span> = <span class="keyword">null</span>;</span><br><span class="line">       BufferedWriter writer = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           <span class="keyword">out</span> = openFileOutput(<span class="string">"data"</span>,Context.MODE_PRIVATE);</span><br><span class="line">           writer = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> OutputStreamWriter(<span class="keyword">out</span>));</span><br><span class="line">           writer.write(inputText);</span><br><span class="line">       &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">           e.printStackTrace();</span><br><span class="line">       &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">           <span class="keyword">try</span> &#123;</span><br><span class="line">               <span class="keyword">if</span>(writer != <span class="keyword">null</span>)&#123;</span><br><span class="line">                   writer.close();</span><br><span class="line">               &#125;</span><br><span class="line">           &#125; <span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">               e.printStackTrace();</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>使用openFileOutput/openFileInput搭配相应的java输入输出流使用文件来存储数据。另外，记得writer.close()。</p>
<p>读取文件就将<code>FileOutputStream-&gt;FileInputStream</code>，<code>BufferedWriter-&gt;BufferedReader</code>,<code>wirter.write-&gt;reader.redline()</code><br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">String</span> load()&#123;</span><br><span class="line"></span><br><span class="line">       FileInputStream inputStream = <span class="keyword">null</span>;</span><br><span class="line">       <span class="keyword">BufferedReader</span> reader = <span class="keyword">null</span>;</span><br><span class="line">       StringBuilder content = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"></span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           inputStream = openFileInput(<span class="string">"data"</span>);</span><br><span class="line">           reader = <span class="keyword">new</span> <span class="keyword">BufferedReader</span>(<span class="keyword">new</span> InputStreamReader(inputStream));</span><br><span class="line">           <span class="keyword">String</span> <span class="built_in">line</span> = <span class="string">""</span>;</span><br><span class="line">           <span class="keyword">while</span> ((<span class="built_in">line</span> = reader.readLine()) != <span class="keyword">null</span>)&#123;</span><br><span class="line">               content.<span class="built_in">append</span>(<span class="built_in">line</span>);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125; <span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">           e.printStackTrace();</span><br><span class="line">       &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">           <span class="keyword">if</span> (reader != <span class="keyword">null</span>)&#123;</span><br><span class="line">              <span class="keyword">try</span> &#123;</span><br><span class="line">                  reader.close();</span><br><span class="line">              &#125; <span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">                  e.printStackTrace();</span><br><span class="line">              &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> content.toString();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="使用SharedPreferences存储数据">使用SharedPreferences存储数据</h3><p> 存放数据<br><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SharedPreferences.Editor <span class="keyword">editor</span> = getSharedPreferences(<span class="string">"data"</span>,MODE_PRIVATE).edit();</span><br><span class="line"><span class="keyword">editor</span>.putString(<span class="string">"name"</span>,<span class="string">"Gaby"</span>);</span><br><span class="line"><span class="keyword">editor</span>.putBoolean(<span class="string">"married"</span>,false);</span><br><span class="line"><span class="keyword">editor</span>.putInt(<span class="string">"age"</span>,<span class="number">19</span>);</span><br><span class="line"><span class="keyword">editor</span>.commit();</span><br></pre></td></tr></table></figure></p>
<p>数据以xml的形式存在</p>
<p>取数据<br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SharedPreferences pref = getSharedPreferences(<span class="string">"data"</span>,MODE_PRIVATE);<span class="comment">//输入相对应的文件名</span></span><br><span class="line"><span class="built_in">String</span> name = pref<span class="built_in">.</span>getString(<span class="string">"name"</span>, <span class="string">""</span>);</span><br><span class="line">int age = pref<span class="built_in">.</span>getInt(<span class="string">"age"</span>,<span class="number">29</span>);</span><br><span class="line"><span class="built_in">Boolean</span> married = pref<span class="built_in">.</span>getBoolean(<span class="string">"married"</span>,<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">Log</span><span class="built_in">.</span>d(<span class="string">"MainActivity"</span>,<span class="string">"name is"</span> + name);</span><br><span class="line"><span class="keyword">Log</span><span class="built_in">.</span>d(<span class="string">"MainActivity"</span>,<span class="string">"age is"</span> + age);</span><br><span class="line"><span class="keyword">Log</span><span class="built_in">.</span>d(<span class="string">"MainActivity"</span>,<span class="string">"married is "</span> + married);</span><br></pre></td></tr></table></figure></p>
<p>加深理解：<br><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">SharedPreferences pref;</span><br><span class="line">SharedPreferences.Editor <span class="keyword">editor</span>;</span><br><span class="line">    </span><br><span class="line">pref = PreferenceManager.getDefaultSharedPreferences(this);</span><br><span class="line">     </span><br><span class="line"><span class="keyword">editor</span> = pref.edit();</span><br><span class="line"></span><br><span class="line"><span class="keyword">editor</span>.putBoolean(<span class="string">"remember_password"</span>, true);                                     <span class="keyword">editor</span>.putString(<span class="string">"account"</span>, account);</span><br><span class="line"><span class="keyword">editor</span>.putString(<span class="string">"password"</span>, password);</span><br><span class="line"><span class="keyword">editor</span>.commit();    </span><br><span class="line"></span><br><span class="line"><span class="keyword">editor</span>.<span class="keyword">clear</span>();<span class="comment">//将SharedPreference中的数据全部清除掉t</span></span><br></pre></td></tr></table></figure></p>
<h3 id="使用SQLite（DBMS）创建数据库存储数据">使用SQLite（DBMS）创建数据库存储数据</h3><h4 id="细节理解：">细节理解：</h4><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dbHelper = <span class="keyword">new</span> MyDatabaseHelpoer(MainActivity.<span class="keyword">this</span>,<span class="string">"BookStore.db"</span>,<span class="literal">null</span>,<span class="number">1</span>);<span class="comment">//构建一个MydatabaseHelper对象</span></span><br><span class="line"></span><br><span class="line">dbHelper.getWritableDatabase();<span class="comment">//没找到BookStore.db这个数据库，即调用onCreate()创建该数据库</span></span><br></pre></td></tr></table></figure>
<p>创建MyDatabaseHelper继承自SQLiteOpenHelper,覆写onCreate(),onCreate()中只需要包含数据库的操作就可以了(该数据库的名字即为构造函数中传入的名字)</p>
<p>一个MyDatabaseHelper的对象创建一个数据库，在onCreate()函数中执行对这个数据库的操作</p>
<p>创建好后，用ddms的explorer(顶上<code>Tools-&gt;Android-&gt;Android Device Monitor-&gt;File Exploer</code>，FileExplorer里的文件目录即为模拟器的文件目录)不能看到改数据库创建的表，用adb shell（adb是一个对连接的usb设备或者模拟器的调试器）看。要使用adb,需要先配置环境变量:增加<code>C:\Users\Gaby\AppData\Local\Android\sdk\platform-tools</code>到系统变量里面的Path,就可以在android studio 的terminal里使用</p>
<p>FileExplorer中<code>/data/data/com.example.gaby.databasetest/databases/</code>目录下有两个文件</p>
<ul>
<li>xxx.db数据库</li>
<li>xxx.db-journal是为让数据库能够支持事务而产生的临时日志文件</li>
</ul>
<p>建表语句:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public static final String CREATE_BOOK = "<span class="operator"><span class="keyword">create</span> <span class="keyword">table</span> Book (<span class="string">"</span><br><span class="line">        + "</span><span class="keyword">name</span> <span class="built_in">text</span>, <span class="string">"</span><br><span class="line">        + "</span>author <span class="built_in">text</span>, <span class="string">"</span><br><span class="line">        + "</span>price <span class="built_in">real</span>, <span class="string">"</span><br><span class="line">        + "</span>pages <span class="built_in">integer</span>, <span class="string">"</span><br><span class="line">        + "</span><span class="keyword">id</span> <span class="built_in">integer</span> primary <span class="keyword">key</span> autoincrement)<span class="string">";</span></span></span><br></pre></td></tr></table></figure></p>
<h4 id="adb命令列举:">adb命令列举:</h4><p><code>adb devices</code> 列出当前设备<br><code>adb shell</code> 进入设备的控制台<br><code>cd /data/data/com.example.gaby.databasetest/databases/</code>进入模拟器该文件夹下<br><code>ls</code>列出该目录下文件夹<br><code>sqlite3 BookStore.db</code> 打开数据库</p>
<h4 id="SQLite命令：">SQLite命令：</h4><p><code>.table</code>显示数据库中有哪些表<br><code>.schema</code>查看建表语句<br><code>.exit</code>/<code>.quit</code> 退出改数据库<br><code>select * from tableName;</code>(有分号) 查询该表下有哪些纪录<br>接着<code>exit</code>退出设备控制台(adb)</p>
<p>注意<code>execSQL(String s)</code>传入的是字符串</p>
<h4 id="CRUD">CRUD</h4><p>以下是按Android提供过的API来做的，实际上还可直接用SQL来操作数据库，见《第一行代码》page 260</p>
<h5 id="向数据库中添加数据(db-insert())_(·)Create_添加">向数据库中添加数据(db.insert())   (·)Create 添加</h5><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">addData.setOnClickListener(new View.OnClickListener() &#123;</span><br><span class="line">           <span class="variable">@Override</span></span><br><span class="line">           public void onClick(View v) &#123;</span><br><span class="line">               SQLiteDatabase db = dbHelper.getWritableDatabase();</span><br><span class="line">               ContentValues <span class="keyword">values</span> = new ContentValues();</span><br><span class="line">               <span class="regexp">//di</span> yi zu</span><br><span class="line">               <span class="keyword">values</span>.put(<span class="string">"name"</span>, <span class="string">"Game Of Thrones"</span>);</span><br><span class="line">               <span class="keyword">values</span>.put(<span class="string">"price"</span>,<span class="number">70.29</span>);</span><br><span class="line">               <span class="keyword">values</span>.put(<span class="string">"author"</span>,<span class="string">"George Martin"</span>);</span><br><span class="line">               <span class="keyword">values</span>.put(<span class="string">"pages"</span>,<span class="number">800</span>);</span><br><span class="line">               db.insert(<span class="string">"Book"</span>, null, <span class="keyword">values</span>);</span><br><span class="line">               <span class="regexp">//di</span> er zu</span><br><span class="line">               <span class="keyword">values</span>.clear();</span><br><span class="line">               <span class="keyword">values</span>.put(<span class="string">"name"</span>,<span class="string">"KaiFu's Saying"</span>);</span><br><span class="line">               <span class="keyword">values</span>.put(<span class="string">"price"</span>,<span class="number">50.34</span>);</span><br><span class="line">               <span class="keyword">values</span>.put(<span class="string">"author"</span>,<span class="string">"KaiFu"</span>);</span><br><span class="line">               <span class="keyword">values</span>.put(<span class="string">"pages"</span>,<span class="number">300</span>);</span><br><span class="line">               db.insert(<span class="string">"Book"</span>, null, <span class="keyword">values</span>);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;);</span><br></pre></td></tr></table></figure>
<p>getWritableDatabase()和getReadableDatabase()除了升级和创建数据库，该方法本身会返回SQLiteDatabase对象。db.insert(“表名”， null, ContentValue对象)。</p>
<h5 id="查询数据(db-query())_(·)Retrieve">查询数据(db.query())      (·)Retrieve</h5><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">queryData.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> onClick(View v) &#123;</span><br><span class="line">                SQLiteDatabase db = dbHelper.getWritableDatabase();</span><br><span class="line">                Cursor <span class="built_in">cursor</span> = db.query(<span class="string">"Book"</span>,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>);</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">cursor</span>.moveToFirst())&#123;</span><br><span class="line">                    do&#123;</span><br><span class="line">                        <span class="keyword">String</span> name = <span class="built_in">cursor</span>.getString(<span class="built_in">cursor</span>.getColumnIndex(<span class="string">"name"</span>));</span><br><span class="line">                        <span class="keyword">String</span> author = <span class="built_in">cursor</span>.getString(<span class="built_in">cursor</span>.getColumnIndex(<span class="string">"author"</span>));</span><br><span class="line">                        <span class="built_in">int</span> pages = <span class="built_in">cursor</span>.getInt(<span class="built_in">cursor</span>.getColumnIndex(<span class="string">"pages"</span>));</span><br><span class="line">                        <span class="keyword">double</span> price =  <span class="built_in">cursor</span>.getDouble(<span class="built_in">cursor</span>.getColumnIndex(<span class="string">"price"</span>));</span><br><span class="line">                        Log.d(<span class="string">"MainActivity"</span>,<span class="string">"book name is"</span> + name);</span><br><span class="line">                        Log.d(<span class="string">"MainActivity"</span>,<span class="string">"book author is"</span> + author);</span><br><span class="line">                        Log.d(<span class="string">"MainActivity"</span>,<span class="string">"book pages is "</span> + pages);</span><br><span class="line">                        Log.d(<span class="string">"MainActivity"</span>,<span class="string">"book price is "</span> + price);</span><br><span class="line">                    &#125;<span class="keyword">while</span>(<span class="built_in">cursor</span>.moveToNext());</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure>
<p><code>db.query()</code>返回Cursor对象</p>
<h5 id="更新数据(db-update())_(·)Update_更新">更新数据(db.update())               (·)Update 更新</h5><p> 注意：在MyDatabaseHelper中的onUpgrade()方法是用于升级数据库(如 多建/删除 一张表)。而更新数据，则是在特定表上修改数据<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">updataData.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                SQLiteDatabase db = dbHelper.getWritableDatabase();</span><br><span class="line">                ContentValues values = <span class="keyword">new</span> ContentValues();</span><br><span class="line">                values.put(<span class="string">"price"</span>,<span class="number">12.33</span>);</span><br><span class="line">                db.update(<span class="string">"Book"</span>, values, <span class="string">"name = ?"</span>,<span class="keyword">new</span> String [] &#123;<span class="string">"Game Of Thrones"</span>&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure></p>
<h5 id="删除数据(db-delete)_(·)Delete_删除">删除数据(db.delete)                 (·)Delete 删除</h5><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">deleteData.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                SQLiteDatabase db = dbHelper.getWritableDatabase();</span><br><span class="line">                db.delete(<span class="string">"Book"</span>,<span class="string">"pages &gt; ?"</span>, <span class="keyword">new</span> String[] &#123; <span class="string">"300"</span> &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure>
<p>删除Book表中pages列值大于300的记录</p>
<h4 id="数据库的事务(ACID要么全成功，要么全失败)">数据库的事务(ACID要么全成功，要么全失败)</h4><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">replaceData.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                SQLiteDatabase db = dbHelper.getWritableDatabase();</span><br><span class="line">                db.beginTransaction();</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    db.delete(<span class="string">"Book"</span>,<span class="keyword">null</span>,<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">                    ContentValues values = <span class="keyword">new</span> ContentValues();</span><br><span class="line">                    values.put(<span class="string">"name"</span>,<span class="string">"MySQL Crash Course"</span>);</span><br><span class="line">                    values.put(<span class="string">"price"</span>,<span class="number">12.93</span>);</span><br><span class="line">                    values.put(<span class="string">"pages"</span>,<span class="number">400</span>);</span><br><span class="line">                    values.put(<span class="string">"author"</span>,<span class="string">"Ben Forta"</span>);</span><br><span class="line">                    db.insert(<span class="string">"Book"</span>,<span class="keyword">null</span>,values);</span><br><span class="line">                    db.setTransactionSuccessful();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    db.endTransaction();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure>
<p>解读：中途出现异常，<code>db.setTransactionSuccessful()</code>得不到执行，当结束事务<code>db.endTransaction()</code>时发现事务未成功执行，旧数据就不会被删除</p>
<h4 id="升级数据库的最佳写法">升级数据库的最佳写法</h4><p>需要注意以下几点：</p>
<ul>
<li>当用户下载的新版本覆盖安装旧版本时，实际上安装好的新版本应用程序具备所有新功能，只是数据库还残留在上一个版本，此时如果代码如下：<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> MyDatabaseHelpoer dbHelper;</span><br><span class="line">dbHelper = <span class="keyword">new</span> MyDatabaseHelpoer(MainActivity.<span class="keyword">this</span>,<span class="string">"BookStore.db"</span>,<span class="keyword">null</span>,<span class="number">6</span>);</span><br><span class="line">Button createDatabase = (Button) findViewById(R.id.createDatebase);</span><br><span class="line">createDatabase.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                dbHelper.getWritableDatabase();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>则可视为手动更新数据库。如果将<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> MyDatabaseHelpoer dbHelper;</span><br><span class="line">dbHelper = <span class="keyword">new</span> MyDatabaseHelpoer(MainActivity.<span class="keyword">this</span>,<span class="string">"BookStore.db"</span>,<span class="literal">null</span>,<span class="number">6</span>);</span><br><span class="line">dbHelper.getWritableDatabase();</span><br></pre></td></tr></table></figure></p>
<p>直接放置在主活动的onCreate(),而不放置在某个监听中，那么伴随活动的启动，数据库就被更新了。需要注意的是，<code>dbHelper.getWritableDatabase()</code>是在没有名为”BookStore.db”的数据库时就创建(执行<code>MydatabaseHelper</code>的<code>onCreate()</code>函数)。如果本来就有，就会去执行<code>onUpdate()</code>函数，判断旧版本是哪一个，进而做出对数据库的更改</p>
<ul>
<li><p>新版本的不光要在onUpgrade()做出更改，还应以备旧版本更新。更要在onCreate()中做出完整的创建工作，以备用户直接下载新版本</p>
</li>
<li><p>在<code>onUpgrade()</code> 中的 <code>case</code> 不加 <code>break</code> , 原因就是如果跨版本升级。比如旧版本的数据库停留在第二版，应用安装好了，且新版本的数据库是第8版，在更新数据库时就要从第二版更新到第八版，依次升级，升级结束后此时的数据库版本号为8</p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onUpgrade</span><span class="params">(SQLiteDatabase db, <span class="keyword">int</span> oldVersion, <span class="keyword">int</span> newVersion)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (oldVersion)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                db.execSQL(CREATE_MILK);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                db.execSQL(<span class="string">"alter table Milk add column volume real"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="个人想法">个人想法</h3><p>对于版本更新的问题，比如手机版的qq，不可能没更新一个版本就在，onUpgrade()里加一个型号，应该会要有个版本间隔（允许的最新和最旧的版本区间），不然200年以后，以腾讯的产品迭代速度，onUpgrade()里面的代码就太多了…</p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="使用文件存储数据">使用文件存储数据</h3><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span>(<span class="params">String inputText</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">       FileOutputStream <span class="keyword">out</span> = <span class="keyword">null</span>;</span><br><span class="line">       BufferedWriter writer = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           <span class="keyword">out</span> = openFileOutput(<span class="string">"data"</span>,Context.MODE_PRIVATE);</span><br><span class="line">           writer = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> OutputStreamWriter(<span class="keyword">out</span>));</span><br><span class="line">           writer.write(inputText);</span><br><span class="line">       &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">           e.printStackTrace();</span><br><span class="line">       &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">           <span class="keyword">try</span> &#123;</span><br><span class="line">               <span class="keyword">if</span>(writer != <span class="keyword">null</span>)&#123;</span><br><span class="line">                   writer.close();</span><br><span class="line">               &#125;</span><br><span class="line">           &#125; <span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">               e.printStackTrace();</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="android" scheme="http://gabygoole.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[《廖雪峰的Git教程》学习笔记]]></title>
    <link href="http://gabygoole.com/2015/12/19/%E3%80%8A%E5%BB%96%E9%9B%AA%E5%B3%B0%E7%9A%84Git%E6%95%99%E7%A8%8B%E3%80%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://gabygoole.com/2015/12/19/《廖雪峰的Git教程》学习笔记/</id>
    <published>2015-12-19T08:28:36.000Z</published>
    <updated>2015-12-19T08:29:05.943Z</updated>
    <content type="html"><![CDATA[<p>首先下载git 打开git Bash</p>
<p>由于是分布式控制系统，每台机器必须自报家门</p>
<p>输入：</p>
<p>$git config –global user.name “guojiale”</p>
<p>$git config –global user.email “gil102@sina.cn”<br><a id="more"></a></p>
<p>–global这个参数表示这台机器上所有的git仓库都会使用这个配置，当然也可以对特定仓库使用特定的用户名和email</p>
<p>$mkdir learngit</p>
<p>$cd learngit</p>
<p>$pwd //pwd用于显示当前目录</p>
<p>创建git仓库</p>
<p>$git init //把learngit这个目录变成仓库</p>
<p>该目录下会出现 .git目录，若看不见，则用ls -ah</p>
<p>用notepad++在该目录下创建并编写文件readme.txt</p>
<p>$git add readme.txt //将文件添加到仓库</p>
<p>$git commit -m “批注信息” //将文件提交到仓库</p>
<p> //////////////////////////////////////////////////////////</p>
<p>修改文件后</p>
<p>$git status //查看状态</p>
<p>提示：changes not staged for commit</p>
<p>意思是单纯只是修改了，但没有提交到仓库，成为临时状态</p>
<p>$git diff readme.txt //查看不同</p>
<p>$git add readme.txt //将修改提交修改</p>
<p>$git status //查看仓库状态</p>
<p>提示：changes to be commited</p>
<p>readme.txt进入临时状态,改变等被commited</p>
<p>$git commit -m “add three lines”</p>
<p>//////////////////////////////////////////////////</p>
<p>$git log //显示所有版本</p>
<p>$git log –pretty=oneline //让历史版本显示更简单</p>
<p>$git reset –hard HEAD^  //回到上一个版本</p>
<p>$git reset –hard HEAD~100 //回到前100个版本</p>
<p>当你回到过去后，关闭git窗口，又想回到未来</p>
<p>$git reflog //查看你过去的命令，找到相应版本号，commit在上面的是时间偏后的版本</p>
<p> 该命令通常只会有针对版本库的命令(commit,reset)</p>
<p>////////////////////////////////////////////////////////</p>
<p>在一个目录（learngit） $git init后，该目录下会产生 .git 文件目录，该目录即为版本库</p>
<p>工作区：learngit目录就是一个工作区</p>
<p>假设增加了一个Lisense并修改了readme.txt</p>
<p>$git status</p>
<p>会提示：readme.txt modified</p>
<p>　　　　Lisense.txt untracked</p>
<p>同时$git add 两个文件，把他们提交到暂存区</p>
<p>一次性commit到master分支</p>
<p>每次修改，必须被add到暂存区，然后commit，</p>
<p>否则修改了-&gt;add-&gt;再修改-&gt;commit（只会把暂存区的给commit了），第二次修改就没实现</p>
<p>补救：$git add-&gt;commit</p>
<p>///////////////////////////////////////管理修改</p>
<p>$cat readme.txt 可用股查看工作区的文件内容</p>
<p>$git checkout – readme.txt //可撤销工作区的修改</p>
<p>如果add到了暂存区，再次对工作区做修改，会变回之前被放在暂存区之后的样子</p>
<p>////////////////////////////////////////////////////////// $git reset HEAD readme.txt</p>
<p>若把修改提交到了暂存区用 $git reset HEAD readme.txt 撤销暂存区的修改，退回到工作区</p>
<p>接着 $git checkout – readme.txt 撤销工作区的修改，回到上一次commit的状态</p>
<p>/////////////////////////////////////////////////////////////////////////////////////////$rm readme.txt</p>
<p>$rm readme.txt //删除工作区的文件</p>
<p>$git status //有修改没被提交到暂存区</p>
<p>此时如果确实想删：</p>
<p>$git rm readme.txt</p>
<p>将版本库里面的该文件也给删了</p>
<p>如果是误删：</p>
<p>$git checkout – readme.txt //撤销工作区的文件删除操作，因为版本库里还有，仿佛版本库里面就是参照</p>
<p>/////////////////////////////////////////////////////////////////////////////////////////////////////////添加远程库</p>
<p>$cd learngit ///进入本地git仓库</p>
<p>$git remote add origin <a href="https://github.com/gabygoole/learn.git" target="_blank" rel="external">https://github.com/gabygoole/learn.git</a> //让本地仓库关联github上的learngit仓库<br>$git push -u origin master //由于是第一次推送，github上仓库为空，加-u</p>
<p>总结：要关联一个远程仓库用<br>$git remote add origin http…<br>关联后使用：<br>$git push -u origin master<br>本地commit后：<br>$git push origin master</p>
<p>我们第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令<br>$cd是返回上级目录<br>$ls //列出该目录下所有文件<br>//////////////////////////////////<br>要克隆一个远程仓库，先知道其地址 有ssh格式(原生协议，最快)的，有http格式的，http要慢很多<br>$git clone http…<br>////////////////////////////////////////////////////创建/删除分支<br>$git checkout -b dev //创建dev分支<br>接着修改文件<br>$git add README.md<br>$git commit -m “branch test”<br>$git branch master<br>$git merge dev //将指定的dev分支合并到当前分支<br>$git branch -d dev //删除dev分支</p>
<p>总结：$git branch //查看branch<br>1.<br>$git branch dev //新建分支<br>$git checkout dev //转换分支<br>2.<br>1等同于2<br>$git checkout -b dev //新建dev分支，并且转换到dev分支<br>/////////////////////////////////////////////////////解决冲突<br>$git log //当出现<end>标记，输入q可退出历史记录<br>当遇到master分支和fea1分支上下并行时，这时$git merge fea1就要冲突<br>解决办法是在master分支重新修改这个冲突的文件，再commit，两个文件会分支会合并在一起，最后删除fea1分支<br>/////////////////////////////////////////////////////<br>当我误操作<br>$git commit README.md<br>做操作提示：<br>If no other git process is currently running, this probably means a<br>git process crashed in this repository earlier. Make sure no other git<br>process is running and remove the file manually to continue.<br>解决：<br>　　rm -f ./.git/index.lock</end></p>
<p> 续：分支管理策略<br>git pull：从其他的版本库（既可以是远程的也可以是本地的）将代码更新到本地，例如：’git pull origin master’就是将origin这个版本库的代码更新到本地的master主枝</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>首先下载git 打开git Bash</p>
<p>由于是分布式控制系统，每台机器必须自报家门</p>
<p>输入：</p>
<p>$git config –global user.name “guojiale”</p>
<p>$git config –global user.email “gil102@sina.cn”<br>]]>
    
    </summary>
    
      <category term="Git" scheme="http://gabygoole.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android Studio环境搭建]]></title>
    <link href="http://gabygoole.com/2015/12/19/Android%20studio%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://gabygoole.com/2015/12/19/Android studio环境搭建/</id>
    <published>2015-12-19T08:25:55.000Z</published>
    <updated>2015-12-19T08:27:10.498Z</updated>
    <content type="html"><![CDATA[<p>遇到哪些坑:</p>
<p>Gradle:configure project 卡死在此处<br>Haxm is not installed<br>hax is not working and emulator runs in emulation mode(Haxm安装之后)<br>Genymotion插件安装及使用<br> <a id="more"></a></p>
<p>他们的解决方法：</p>
<p>Gradle:configure project<br>　　　　此处需要翻墙，等5-7min</p>
<p>　　　　若不行，点击cancel在里面依然能完成gradle的下载配置</p>
<p>Haxm is not installed<br>　　　　SDK manager-&gt;android SDK-&gt;SDK tools-&gt;安装Intel x86 Emulator Accelerrator</p>
<p>　　　　安装好后进入这个文件夹：</p>
<p>　　　　C:\Users\Gaby\AppData\Local\Android\sdk\extras\intel\Hardware_Accelerated_Execution_Manager</p>
<p>　　　　启动intallHaxm.exe </p>
<p>hax is not working and emulator runs in emulation mode(Haxm安装之后)<br>　　　　这个问题是安装Haxm时，设定的虚拟器大小1024MB</p>
<p>　　　　点击AVD manager-&gt;Edit AVD-&gt;show advanced settings-&gt;在RAM处改成1024</p>
<p>　　　　必须使得HAXM所配置的大小&gt;=某个模拟器的RAM大小</p>
<p>Genymotion插件安装及使用<br>　　　　参见<a href="https://www.genymotion.com/#!/developers/user-guide#genymotion-plugin-for-android-studio" target="_blank" rel="external">https://www.genymotion.com/#!/developers/user-guide#genymotion-plugin-for-android-studio</a></p>
<p>　　　　唯一需要注意的是,启动好的模拟器就别关了，桌面启动完成后</p>
<p>　　　　再点击app的run，东西就会跳出来</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>遇到哪些坑:</p>
<p>Gradle:configure project 卡死在此处<br>Haxm is not installed<br>hax is not working and emulator runs in emulation mode(Haxm安装之后)<br>Genymotion插件安装及使用<br>]]>
    
    </summary>
    
      <category term="android" scheme="http://gabygoole.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[广播的最佳实践-实现强制下线功能]]></title>
    <link href="http://gabygoole.com/2015/12/18/%E5%B9%BF%E6%92%AD%E7%9A%84%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5-%E5%AE%9E%E7%8E%B0%E5%BC%BA%E5%88%B6%E4%B8%8B%E7%BA%BF%E5%8A%9F%E8%83%BD/"/>
    <id>http://gabygoole.com/2015/12/18/广播的最佳实践-实现强制下线功能/</id>
    <published>2015-12-18T15:35:18.000Z</published>
    <updated>2015-12-19T07:22:54.079Z</updated>
    <content type="html"><![CDATA[<h3 id="主体思想">主体思想</h3><p>使用ActivityCollector来收集所有活动，所有的活动均继承自BaseActivity，使得每个活动在onCreate方法执行时，都会被加入到AcrivityCollector中。在每个活动onDestroy时都会从ActivityCollector中移除。这样就可以一次性将所有的活动全部销毁。在登陆界面输入账号密码，代码的设定是只有当敲击Login按钮时才会去获取两个EditText中，符合逻辑</p>
<p>交互的流程是，输入账号密码，无误后跳转到MainActivity，点击按钮发送广播，app中的recreiver接收到广播执行onReceive方法，弹出AlertDialog窗口，给ok按钮设置监听。按下ok之后，用ActivityCollector销毁所有活动，重新加载login活动<br><a id="more"></a></p>
<h3 id="值得注意">值得注意</h3><p>因为是从接收器中弹出活动，intent需加入<code>FLAG_ACTIVITY_NEW_TASK</code>，形如<code>intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK)</code>,在接受器里启动活动，需以这样的格式：<code>context.startActivity(intent)</code>,而intent的初始化是以这样的形式：<code>Intent intent = new Intent(context,MainActivity.class)</code>,似乎在接收器里都用context来表示接收器的上下文</p>
<p>再有，因为提示框是从广播接收器中弹出的，所以需要把对话框的类型设置为<code>TYPE_SYSTEM_ALERT</code>，形如：<code>alertDialog.getWindow().setType(WindowManager.LayoutParams.TYPE_SYSTEM_ALERT)</code>,由于都调用了系统级别的对话框，也需要在Manifest文件下注册<code>&lt;user-permission android:name=&quot;android.permission.SYSTEM_ALERT_WINDOW&quot;&gt;</code>,该应用才能使用该对话框</p>
<p>另外需要注意的是，AlertDialog的造法：<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">AlertDialog</span>.<span class="type">Builder</span> builder = new <span class="type">AlertDialog</span>.<span class="type">Builder</span>(context)</span><br><span class="line">builder.setTitle</span><br><span class="line">builder.setMessage</span><br><span class="line">builder.setPositiveButton(<span class="string">"OK"</span>,new <span class="type">OnclickListener</span><span class="decorator">&#123;....&#125;</span>)</span><br><span class="line"><span class="type">AlertDialog</span> alertDialog = builder.create();</span><br><span class="line">alertDialog.getWindow().setType(<span class="type">WindowManager</span>.<span class="type">LayoutParams</span>.<span class="type">TYPE_SYSTEM_ALERT</span>)</span><br><span class="line">alertDialog.show()</span><br></pre></td></tr></table></figure></p>
<p>先弄个builder，再用这个builder去建一个AlertDialog，接着再设置这个AlertDialog的类型，最后让他show出来</p>
<h3 id="代码结构">代码结构</h3><p><img src="http://ww1.sinaimg.cn/large/85184d39gw1ez4znld8nuj20as08cdh1.jpg" alt="代码结构"></p>
<h3 id="上代码">上代码</h3><h4 id="ActivityCollector-class">ActivityCollector.class</h4><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ActivityCollector</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;Activity&gt; activities = <span class="keyword">new</span> ArrayList&lt;Activity&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">addActivity</span>(<span class="params">Activity activity</span>)</span>&#123;</span><br><span class="line">        activities.add(activity);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">removeActivity</span>(<span class="params">Activity activity</span>)</span>&#123;</span><br><span class="line">        activities.remove(activity);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">finishAll</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(Activity activity : activities)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!activity.isFinishing())&#123;</span><br><span class="line">                activity.finish();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="BaseActivity-class">BaseActivity.class</h4><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">BaseActivity</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">Activity</span>&#123;</span></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="type">ActivityCollector</span>.addActivity(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onDestroy() &#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        <span class="type">ActivityCollector</span>.removeActivity(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="forceReceiver-class">forceReceiver.class</h4><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">ForceOffReceiver</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">BroadcastReceiver</span>&#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    public void onReceive(<span class="keyword">final</span> <span class="type">Context</span> context, <span class="keyword">final</span> <span class="type">Intent</span> intent) &#123;</span><br><span class="line">        <span class="type">AlertDialog</span>.<span class="type">Builder</span> builder = <span class="keyword">new</span> <span class="type">AlertDialog</span>.<span class="type">Builder</span>(context);</span><br><span class="line">        builder.setTitle(<span class="string">"Waring"</span>);</span><br><span class="line">        builder.setCancelable(<span class="literal">false</span>);</span><br><span class="line">        builder.setMessage(<span class="string">"you are forced to offline"</span>);</span><br><span class="line">        builder.setPositiveButton(<span class="string">"OK"</span>, <span class="keyword">new</span> <span class="type">DialogInterface</span>.<span class="type">OnClickListener</span>() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            public void onClick(<span class="type">DialogInterface</span> dialog, int which) &#123;</span><br><span class="line">                <span class="type">ActivityCollector</span>.finishAll();</span><br><span class="line">                <span class="type">Intent</span> intent1 = <span class="keyword">new</span> <span class="type">Intent</span>(context,loginActivity.<span class="keyword">class</span>);</span><br><span class="line">                intent1.addFlags(<span class="type">Intent</span>.<span class="type">FLAG_ACTIVITY_NEW_TASK</span>);</span><br><span class="line">                context.startActivity(intent1);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="type">AlertDialog</span> alertDialog = builder.create();</span><br><span class="line">        alertDialog.getWindow().setType(<span class="type">WindowManager</span>.<span class="type">LayoutParams</span>.<span class="type">TYPE_SYSTEM_ALERT</span>);</span><br><span class="line">        alertDialog.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="loginActivity-class">loginActivity.class</h4><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">loginActivity</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">BaseActivity</span> &#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="type">EditText</span> accountEdit;</span><br><span class="line"></span><br><span class="line">    <span class="type">EditText</span> passwordEdit;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(<span class="type">R</span>.layout.activity_login);</span><br><span class="line">        accountEdit = (<span class="type">EditText</span>) findViewById(<span class="type">R</span>.id.content_account);</span><br><span class="line">        passwordEdit = (<span class="type">EditText</span>) findViewById(<span class="type">R</span>.id.content_password);</span><br><span class="line">        <span class="type">Button</span> btn = (<span class="type">Button</span>) findViewById(<span class="type">R</span>.id.btn_login);</span><br><span class="line">        btn.setOnClickListener(<span class="keyword">new</span> <span class="type">View</span>.<span class="type">OnClickListener</span>() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            public void onClick(<span class="type">View</span> v) &#123;</span><br><span class="line">                <span class="type">String</span> account = accountEdit.getText().toString();</span><br><span class="line">                <span class="type">String</span> password = passwordEdit.getText().toString();</span><br><span class="line">                <span class="keyword">if</span>(account.equals(<span class="string">"guojiale"</span>) &amp;&amp; password.equals(<span class="string">"123456"</span>))&#123;</span><br><span class="line">                    <span class="type">Intent</span> intent = <span class="keyword">new</span> <span class="type">Intent</span>(loginActivity.<span class="keyword">this</span>,<span class="type">MainActivity</span>.<span class="keyword">class</span>);</span><br><span class="line">                    startActivity(intent);</span><br><span class="line">                &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="type">Toast</span>.makeText(loginActivity.<span class="keyword">this</span>, <span class="string">"Check your account and password"</span>, <span class="type">Toast</span>.<span class="type">LENGTH_SHORT</span>).show();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="MainActivity-class">MainActivity.class</h4><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">BaseActivity</span> &#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(<span class="type">R</span>.layout.activity_main);</span><br><span class="line">        <span class="type">Button</span> button = (<span class="type">Button</span>) findViewById(<span class="type">R</span>.id.btn_sendBrodcast);</span><br><span class="line">        button.setOnClickListener(<span class="keyword">new</span> <span class="type">View</span>.<span class="type">OnClickListener</span>() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            public void onClick(<span class="type">View</span> v) &#123;</span><br><span class="line">                <span class="type">Intent</span> intent = <span class="keyword">new</span> <span class="type">Intent</span>(<span class="string">"forceOff"</span>);</span><br><span class="line">                sendBroadcast(intent);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="零散笔记">零散笔记</h3><p>广播接收器中不允许开线程，如果广播接收器中有太多操作，耗时太长，程序会报错</p>
<p>在一个应用的Manifest文件中，配置<user-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"><br>使得该应用获得监听系统开机广播的权限，在<application>中，写<receiver android:name="BOOT_COMPLETED" ..<intent-filter=""> rr这是在注册监听器</receiver></application></user-permission></p>
<p>在manifest中receiver（接收器）的intent-filter中的action是表示该接收器监听的广播类型一旦收到相应类型的广播，就会执行该接收器中的逻辑</p>
<p>在一个活动中发送广播，<code>sendBroadcast</code>为发送标准广播,<code>sendOrderedBroadcast</code>为发送有序广播，在Manifest文件下配置<code>receiver</code>需要的<code>intentFilter</code>,用<code>priority</code>来判断接收器的接收顺序</p>
<p>使用<code>abortBroadcast()</code> 截断广播<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">LocalBroadcastManager <span class="keyword">l</span> = LocalBraodcastManager.getInstace(this)</span><br><span class="line"><span class="keyword">l</span>.registerReceiver(localReceiver,intentFilter);</span><br><span class="line"><span class="keyword">l</span>.sendBroadcast(intent)</span><br><span class="line"><span class="keyword">l</span>.unregisterReceiver(localReceiver)</span><br></pre></td></tr></table></figure></p>
<p>抛出异常：<br> java.lang.RuntimeException: Unable to start receiver com.example.gaby.broadcastbestpractice.ForceOffReceiver: android.view.WindowManager<code>$</code>BadTokenException: Unable to add window android.view.ViewRootImpl$W@d5bf998 – permission denied for this window type</p>
<p>原因：使用了系统级别的对话框，但没有在Manifest文件下声明该权限<br>解决办法:在Manifest文件下声明&lt; user-permission android:name=”android.permission.SYSTEM_ALERT_WINDOW” /&gt;</p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="主体思想">主体思想</h3><p>使用ActivityCollector来收集所有活动，所有的活动均继承自BaseActivity，使得每个活动在onCreate方法执行时，都会被加入到AcrivityCollector中。在每个活动onDestroy时都会从ActivityCollector中移除。这样就可以一次性将所有的活动全部销毁。在登陆界面输入账号密码，代码的设定是只有当敲击Login按钮时才会去获取两个EditText中，符合逻辑</p>
<p>交互的流程是，输入账号密码，无误后跳转到MainActivity，点击按钮发送广播，app中的recreiver接收到广播执行onReceive方法，弹出AlertDialog窗口，给ok按钮设置监听。按下ok之后，用ActivityCollector销毁所有活动，重新加载login活动<br>]]>
    
    </summary>
    
      <category term="android" scheme="http://gabygoole.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[碎片最佳实践-简易版的新闻应用]]></title>
    <link href="http://gabygoole.com/2015/12/16/%E7%A2%8E%E7%89%87%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5-%E7%AE%80%E6%98%93%E7%89%88%E7%9A%84%E6%96%B0%E9%97%BB%E5%BA%94%E7%94%A8/"/>
    <id>http://gabygoole.com/2015/12/16/碎片最佳实践-简易版的新闻应用/</id>
    <published>2015-12-16T04:29:47.000Z</published>
    <updated>2015-12-16T05:23:28.782Z</updated>
    <content type="html"><![CDATA[<h3 id="先上成果图">先上成果图</h3><p><img src="http://ww4.sinaimg.cn/large/85184d39gw1ez1dybimszj20ec0nfq4b.jpg" alt="小屏幕"></p>
<a id="more"></a>
<p><img src="http://ww3.sinaimg.cn/large/85184d39gw1ez1e1sf9boj20e70mi76i.jpg" alt="点击后"><br><img src="http://ww1.sinaimg.cn/large/85184d39gw1ez1e2eca23j20n70d40ti.jpg" alt="大屏幕Nexus7"><br><img src="http://ww1.sinaimg.cn/large/85184d39gw1ez1e3asyf9j20ne0efgn8.jpg" alt="点击后"></p>
<h3 id="主体思想">主体思想</h3><p>写两个<code>activity_main</code>布局文件，一个在layout文件夹下，另一个置于layout-sw600dp下。前者只有一个<code>titleFragment</code>碎片，后者还会加上<code>contentFragment</code>碎片，系统根据设备大小加载不同的<code>activity_main</code>。但是也由于两种布局下都包含<code>titleFragment</code>碎片，在点击ListView时，面临两种选择。其一，若为单页模式，就跳转到包含内容布局的活动。若为双页，获取右碎片实例(getFragmentManager.findFragmentById)，refresh下即可。至于如何判断当前处于单页还是双页，两个<code>activity_main</code>不同的就是大屏幕的多了一个右侧碎片，给这个碎片加上id,在<code>titleFragment</code>中的onActivityCreated(活动加载完成才执行的函数) 用getActivity().findViewById(右侧碎片的id)来判断。getActivity是获取与该碎片相关联的活动</p>
<h3 id="遇到的问题">遇到的问题</h3><ol>
<li>继承自android.app.Fragment的碎片类，里面的onAttach(Context context) 在API23中<br>不会被调用，导致里面的初始化操作不会执行</li>
</ol>
<p>解决办法: 将onAttach()中代码转移进onCreateView()</p>
<ol>
<li>代码无异常，运行时抛出ActivityNotFound异常</li>
</ol>
<p>解决办法：在AndroidManifest下注册活动</p>
<h3 id="上代码">上代码</h3><h4 id="代码结构">代码结构</h4><p><img src="http://ww3.sinaimg.cn/large/85184d39gw1ez1fg2ousmj208y097gmt.jpg" alt="结构"></p>
<h4 id="News-class"><code>News.class</code></h4><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> News &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">String</span> title;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">String</span> content;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">void</span> setTitle(<span class="built_in">String</span> title) &#123;</span><br><span class="line">        <span class="keyword">this</span>.title = title;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">void</span> setContent(<span class="built_in">String</span> content) &#123;</span><br><span class="line">        <span class="keyword">this</span>.content = content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">String</span> getTitle() &#123;</span><br><span class="line">        <span class="keyword">return</span> title;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">String</span> getContent() &#123;</span><br><span class="line">        <span class="keyword">return</span> content;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="NewsAdapter-class"><code>NewsAdapter.class</code></h4><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">NewsAdapter</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">ArrayAdapter&lt;News&gt;</span>&#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> int resourceId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">View</span> view;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">ViewHolder</span> viewHolder;</span><br><span class="line"></span><br><span class="line">    public <span class="type">NewsAdapter</span>(<span class="type">Context</span> context,int textViewResourceId, <span class="type">List</span>&lt;<span class="type">News</span>&gt; objects) &#123;</span><br><span class="line">        <span class="keyword">super</span>(context, textViewResourceId, objects);</span><br><span class="line">        resourceId = textViewResourceId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    public <span class="type">View</span> getView(int position, <span class="type">View</span> convertView, <span class="type">ViewGroup</span> parent) &#123;</span><br><span class="line">        <span class="type">News</span> news = getItem(position);</span><br><span class="line">        <span class="keyword">if</span>(convertView == <span class="literal">null</span>)&#123;</span><br><span class="line">            view = <span class="type">LayoutInflater</span>.from(getContext()).inflate(resourceId,<span class="literal">null</span>);</span><br><span class="line">            viewHolder = <span class="keyword">new</span> <span class="type">ViewHolder</span>();</span><br><span class="line">            viewHolder.titleTextView = (<span class="type">TextView</span>) view.findViewById(<span class="type">R</span>.id.title_item_tv);</span><br><span class="line">            view.setTag(viewHolder);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            view = convertView;</span><br><span class="line">            viewHolder = (<span class="type">ViewHolder</span>) view.getTag();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        viewHolder.titleTextView.setText(news.getTitle());</span><br><span class="line">        <span class="keyword">return</span> view;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">ViewHolder</span>&#123;</span></span><br><span class="line">        <span class="type">TextView</span> titleTextView;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="NewsContentFragment-class"><code>NewsContentFragment.class</code></h4><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">NewsContentFragment</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">Fragment</span>&#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">View</span> view;</span><br><span class="line">    <span class="annotation">@Nullable</span></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    public <span class="type">View</span> onCreateView(<span class="type">LayoutInflater</span> inflater, <span class="type">ViewGroup</span> container, <span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line">        view = inflater.inflate(<span class="type">R</span>.layout.content_frag,container,<span class="literal">false</span>);</span><br><span class="line">        <span class="keyword">return</span> view;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void refresh(<span class="type">String</span> title, <span class="type">String</span> content)&#123;</span><br><span class="line">        <span class="type">LinearLayout</span> linearLayout = (<span class="type">LinearLayout</span>) view.findViewById(<span class="type">R</span>.id.content);</span><br><span class="line">        linearLayout.setVisibility(<span class="type">View</span>.<span class="type">VISIBLE</span>);</span><br><span class="line">        <span class="type">TextView</span> title_tv = (<span class="type">TextView</span>) view.findViewById(<span class="type">R</span>.id.tv_title);</span><br><span class="line">        <span class="type">TextView</span> content_tv = (<span class="type">TextView</span>) view.findViewById(<span class="type">R</span>.id.tv_content);</span><br><span class="line">        title_tv.setText(title);</span><br><span class="line">        content_tv.setText(content);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="NewsTitleFragment-class"><code>NewsTitleFragment.class</code></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NewsTitleFragment</span> <span class="keyword">extends</span> <span class="title">Fragment</span> <span class="keyword">implements</span> <span class="title">AdapterView</span>.<span class="title">OnItemClickListener</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;News&gt; newsList = <span class="keyword">new</span> ArrayList&lt;News&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Boolean twoPane;</span><br><span class="line">    <span class="annotation">@Nullable</span></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">onCreateView</span><span class="params">(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        initData();</span><br><span class="line">        NewsAdapter adapter = <span class="keyword">new</span> NewsAdapter(getActivity(),R.layout.title_item,newsList);</span><br><span class="line">        View view = inflater.inflate(R.layout.newstitle_frag,container,<span class="keyword">false</span>);</span><br><span class="line">        ListView NewsTitleListView = (ListView) view.findViewById(R.id.title_list_view);</span><br><span class="line">        NewsTitleListView.setAdapter(adapter);</span><br><span class="line">        NewsTitleListView.setOnItemClickListener(<span class="keyword">this</span>);</span><br><span class="line">        <span class="keyword">return</span> view;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initData</span><span class="params">()</span></span>&#123;</span><br><span class="line">        News news1 = <span class="keyword">new</span> News();</span><br><span class="line">        news1.setTitle(<span class="string">"Google will accept Gaby to be the CEO"</span>);</span><br><span class="line">        news1.setContent(<span class="string">"To reduce housing inventories, more migrant rural workers should be issued with urban-residency permits, which will allow them to purchase housing in cities, according to a statement released after a meeting of the Political Bureau of the CPC Central Committee presided over by President Xi Jinping."</span>);</span><br><span class="line">        newsList.add(news1);</span><br><span class="line"></span><br><span class="line">        News news2 = <span class="keyword">new</span> News();</span><br><span class="line">        news2.setTitle(<span class="string">"High-tech products at Light of the Internet Expo Baidu 'self-driving' cars to hit roads in 3 years"</span>);</span><br><span class="line">        news2.setContent(<span class="string">"Baidu indicated that the new business unit will focus on research and development of self-driving technology as well as build the industrial chain to support the production of next-generation cars."</span>);</span><br><span class="line">        newsList.add(news2);</span><br><span class="line"></span><br><span class="line">        News news3 = <span class="keyword">new</span> News();</span><br><span class="line">        news3.setContent(<span class="string">"In the future, vehicles could be self-driven and controlled by smart systems. We have set a target to commercialize our operations in the next three years,\" he said, adding that in 10 years, about 80 percent of the newly produced vehicles would be equipped with self-driving technologies"</span>);</span><br><span class="line">        news3.setTitle(<span class="string">"Reasonable economomic growth rate targeted"</span>);</span><br><span class="line">        newsList.add(news3);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onActivityCreated</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onActivityCreated(savedInstanceState);</span><br><span class="line">        <span class="keyword">if</span>(getActivity().findViewById(R.id.content_frag_layout) == <span class="keyword">null</span>)&#123;</span><br><span class="line">            twoPane = <span class="keyword">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">            twoPane = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onItemClick</span><span class="params">(AdapterView&lt;?&gt; parent, View view, <span class="keyword">int</span> position, <span class="keyword">long</span> id)</span> </span>&#123;</span><br><span class="line">        News news = newsList.get(position);</span><br><span class="line">        <span class="keyword">if</span>(twoPane)&#123;</span><br><span class="line">            NewsContentFragment newsContentFragment = (NewsContentFragment) getFragmentManager().findFragmentById(R.id.content_frag_layout);</span><br><span class="line">            newsContentFragment.refresh(news.getTitle(), news.getContent());</span><br><span class="line">        &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">            contentActivity.actionStart(getActivity(),news.getTitle(),news.getContent());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="content_frag-xml"><code>content_frag.xml</code></h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">RelativeLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">android:orientation</span>=<span class="value">"vertical"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">LinearLayout</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/content"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:orientation</span>=<span class="value">"vertical"</span></span><br><span class="line">        <span class="attribute">android:visibility</span>=<span class="value">"invisible"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/tv_title"</span></span><br><span class="line">            <span class="attribute">android:textSize</span>=<span class="value">"20sp"</span></span><br><span class="line">            <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">            <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">            <span class="attribute">android:padding</span>=<span class="value">"10dp"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="title">ImageView</span></span><br><span class="line">            <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">            <span class="attribute">android:layout_height</span>=<span class="value">"1dp"</span></span><br><span class="line">            <span class="attribute">android:src</span>=<span class="value">"@drawable/vandh"</span></span><br><span class="line">            <span class="attribute">android:scaleType</span>=<span class="value">"fitXY"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/tv_content"</span></span><br><span class="line">            <span class="attribute">android:textSize</span>=<span class="value">"20sp"</span></span><br><span class="line">            <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">            <span class="attribute">android:layout_height</span>=<span class="value">"0dp"</span></span><br><span class="line">            <span class="attribute">android:layout_weight</span>=<span class="value">"1"</span></span><br><span class="line">            <span class="attribute">android:padding</span>=<span class="value">"15dp"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">ImageView</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"1dp"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:src</span>=<span class="value">"@drawable/vandh"</span></span><br><span class="line">        <span class="attribute">android:layout_alignParentLeft</span>=<span class="value">"true"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="newsTitle_frag-xml"><code>newsTitle_frag.xml</code></h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">LinearLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">android:orientation</span>=<span class="value">"vertical"</span> <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">ListView</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/title_list_view"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span>&gt;</span><span class="tag">&lt;/<span class="title">ListView</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span></span></span><br></pre></td></tr></table></figure>
<h4 id="title_item-xml"><code>title_item.xml</code></h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">LinearLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">android:orientation</span>=<span class="value">"vertical"</span> <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/title_item_tv"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:singleLine</span>=<span class="value">"true"</span></span><br><span class="line">        <span class="attribute">android:ellipsize</span>=<span class="value">"end"</span></span><br><span class="line">        <span class="attribute">android:paddingLeft</span>=<span class="value">"10dp"</span></span><br><span class="line">        <span class="attribute">android:paddingRight</span>=<span class="value">"10dp"</span></span><br><span class="line">        <span class="attribute">android:paddingTop</span>=<span class="value">"15dp"</span></span><br><span class="line">        <span class="attribute">android:paddingBottom</span>=<span class="value">"15dp"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="content-xml"><code>content.xml</code></h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">LinearLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">android:orientation</span>=<span class="value">"vertical"</span> <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">fragment</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/content_alone"</span></span><br><span class="line">        <span class="attribute">android:name</span>=<span class="value">"com.example.gaby.fragmentbestpacticey.NewsContentFragment"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span></span></span><br></pre></td></tr></table></figure>
<h4 id="layout-anctivity_main"><code>layout-anctivity_main</code></h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">RelativeLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">fragment</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/title_frag"</span></span><br><span class="line">        <span class="attribute">android:name</span>=<span class="value">"com.example.gaby.fragmentbestpacticey.NewsTitleFragment"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="layout-sw600dp-activity_main"><code>layout-sw600dp-activity_main</code></h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">LinearLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">fragment</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/news_title_fragment"</span></span><br><span class="line">        <span class="attribute">android:name</span>=<span class="value">"com.example.gaby.fragmentbestpacticey.NewsTitleFragment"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"0dp"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_weight</span>=<span class="value">"1"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">fragment</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/content_frag_layout"</span></span><br><span class="line">        <span class="attribute">android:name</span>=<span class="value">"com.example.gaby.fragmentbestpacticey.NewsContentFragment"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"0dp"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_weight</span>=<span class="value">"3"</span></span><br><span class="line">        /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="先上成果图">先上成果图</h3><p><img src="http://ww4.sinaimg.cn/large/85184d39gw1ez1dybimszj20ec0nfq4b.jpg" alt="小屏幕"></p>]]>
    
    </summary>
    
      <category term="android" scheme="http://gabygoole.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[初探碎片]]></title>
    <link href="http://gabygoole.com/2015/12/15/%E5%88%9D%E6%8E%A2%E7%A2%8E%E7%89%87/"/>
    <id>http://gabygoole.com/2015/12/15/初探碎片/</id>
    <published>2015-12-14T16:30:56.000Z</published>
    <updated>2015-12-14T16:33:46.363Z</updated>
    <content type="html"><![CDATA[<h3 id="解决android_studio中使用碎片后，平板预览出错问题">解决android studio中使用碎片后，平板预览出错问题</h3><p><img src="http://ww3.sinaimg.cn/large/85184d39gw1eyy7an6b2ij20e4086gls.jpg" alt="预览出错"><br>解决办法：<br>在左右fragment各加<code>tools:layout=&quot;@layout/left_fragment&quot;</code><br><a id="more"></a><br>问题地址，点进去后记得顶这个问题！<br>显示正常了：<br><img src="http://ww4.sinaimg.cn/large/85184d39gw1eyy7ecrts8j20da08iglt.jpg" alt="显示"></p>
<p>其中，使用碎片的顺序应该是，写的方向则相反：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fragment-&#62;&#30862;&#29255;&#31867;: &#35843;&#29992;&#35813;&#31867;&#10;&#30862;&#29255;&#31867;-&#62;&#24067;&#23616;: &#21152;&#36733;&#35813;&#24067;&#23616;</span><br></pre></td></tr></table></figure></p>
<h3 id="动态添加碎片">动态添加碎片</h3><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//新建碎片类实例</span></span><br><span class="line">anotherFragment anotherFragment = new anotherFragment(); </span><br><span class="line"><span class="comment">//碎片管理器            </span></span><br><span class="line">android.<span class="keyword">app</span>.FragmentManager fragmentManager = getFragmentManager(); </span><br><span class="line"><span class="comment">//用碎片管理器开启事务</span></span><br><span class="line">FragmentTransaction transaction = fragmentManager.beginTransaction(); </span><br><span class="line"><span class="comment">//替换前者容器中的碎片实例，从这里可以看出，在布局文件&lt;fragment name="..."&gt;,实际上是创建了该碎片类的实例      </span></span><br><span class="line">transaction.<span class="keyword">replace</span>(R.id.right_container,anotherFragment);</span><br><span class="line"><span class="comment">//提交事务</span></span><br><span class="line">transaction.commit();</span><br></pre></td></tr></table></figure>
<p>动态添加碎片实则是在一个容器中(此例为FrameLayout)将一个碎片(实例)替换成另一个碎片(实例)</p>
<h3 id="在碎片中模拟返回栈">在碎片中模拟返回栈</h3><p>在事务(transaction)被commit前,添加<code>transaction.addToBackStack(null)</code>，按Back键可以返回事务前的状态</p>
<p>从布局文件获取碎片实例，接着就可以调用碎片的方法：<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LeftFragment leftfrag = (LeftFragment) getFragmentManager().findFragmentById(R.<span class="property">id</span>.left_frag);</span><br></pre></td></tr></table></figure></p>
<p>碎片中调用活动的方法：<br>因为：活动)(1)&lt;–绑定–&gt;布局&lt;–包含–&gt;碎片-&gt;对应碎片类-&gt;在碎片类里面通过getActivity()获取相关联活动(1)</p>
<h3 id="碎片的生命周期">碎片的生命周期</h3><ul>
<li>若有在事务提交前 addToBackStack,那么起初的碎片会onPause-&gt;onStop-&gt;onDestroyView，按Back键会重新加载该碎片 onActivityCreated-&gt;onStart-&gt;onResume(没有onCreateView,原因是借助addToBackStack使得先前碎片的实例和视图得以保存)</li>
<li>反之，在碎片被替换后，onDestroyView-&gt;onDestroy-&gt;onDetach</li>
</ul>
<h3 id="preview无法显示">preview无法显示</h3><p><img src="http://ww4.sinaimg.cn/large/85184d39gw1eyznahk9g0j20i90aw40z.jpg" alt="preview"></p>
<p><a href="http://stackoverflow.com/questions/23898992/android-studio-google-map-v2-fragment-rendering" target="_blank" rel="external">问题的解答</a></p>
<p>大致意思是，只要你代码写的对，真实运行的是时候就不会出错，忽略这个问题即可。我想会不会和上面的那个问题有关，加上<code>tools:layout=&quot;@layout/left_fragment&quot;</code>果然正确显示出来了</p>
<p>其实，可以推理出，<code>tools:layout=&quot;@layout/left_fragment&quot;</code>不过是用了来自<code>xmlns:tools=&quot;http://schemas.android.com/tools&quot;</code>的工具，你不加，无非无法预览而已，该运行的还是运行起走</p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="解决android_studio中使用碎片后，平板预览出错问题">解决android studio中使用碎片后，平板预览出错问题</h3><p><img src="http://ww3.sinaimg.cn/large/85184d39gw1eyy7an6b2ij20e4086gls.jpg" alt="预览出错"><br>解决办法：<br>在左右fragment各加<code>tools:layout=&quot;@layout/left_fragment&quot;</code><br>]]>
    
    </summary>
    
      <category term="android" scheme="http://gabygoole.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[二探ListView]]></title>
    <link href="http://gabygoole.com/2015/12/13/%E4%BA%8C%E6%8E%A2ListView/"/>
    <id>http://gabygoole.com/2015/12/13/二探ListView/</id>
    <published>2015-12-13T03:57:37.000Z</published>
    <updated>2015-12-13T05:37:03.965Z</updated>
    <content type="html"><![CDATA[<h3 id="使用draw9patch">使用draw9patch</h3><ol>
<li>打开内置terminal</li>
<li>输入<code>CD C:\Users\Gaby\AppData\Local\Android\sdk</code></li>
<li>在该目录下输入<code>draw9patch</code></li>
<li>导入图片，开始绘制</li>
<li>本文成果图:</li>
</ol>
<p><img src="http://ww1.sinaimg.cn/large/85184d39gw1eyxyeov7zaj20an0hmmya.jpg" alt="成果图"></p>
<ol>
<li>左边和上边绘制的黑线，表示在纵向和横向拉伸时拉伸的部分。右边和下边的黑线表示要用于显示内容的部分</li>
<li>从图片上可以看出，右边和下边的黑线可以偏中间一点</li>
</ol>
<a id="more"></a>
<h3 id="上代码">上代码</h3><p>首先写MainActivity,先只考虑需要哪些功能，不去管如何实现<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);<span class="comment">//首先写活动主布局文件</span></span><br><span class="line">        ListView listV = (ListView) findViewById(R.id.listView);</span><br><span class="line">        initData(); <span class="comment">//接着写类和initData函数</span></span><br><span class="line">        <span class="comment">//单项布局文件，然后写adapter类</span></span><br><span class="line">        mess_adapter adapter = <span class="keyword">new</span> mess_adapter(MainActivity.<span class="keyword">this</span>,R.layout.item_layout,mesgLists);</span><br><span class="line">        listV.setAdapter(adapter);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>顺序是：MainActivity-&gt;活动布局文件-&gt;Item类-&gt;Item类对象的集合-&gt;初始化该集合-&gt;item_layout单项布局-&gt;adapter类</p>
<h3 id="活动布局文件:">活动布局文件:</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">LinearLayout</span></span><br><span class="line">	<span class="attribute">android:orientation</span>=<span class="value">"vertical"</span>/&gt;</span> </span><br><span class="line">    android:background="#d8e0e8"&gt;</span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="title">ListView</span></span><br><span class="line">       <span class="attribute">android:id</span>=<span class="value">"@+id/listView"</span></span><br><span class="line">       <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">       <span class="attribute">android:layout_height</span>=<span class="value">"0dp"</span></span><br><span class="line">       <span class="attribute">android:divider</span>=<span class="value">"#0000"</span> </span><br><span class="line">       <span class="attribute">android:layout_weight</span>=<span class="value">"1"</span></span><br><span class="line">       &gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="title">ListView</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="title">LinearLayout</span></span><br><span class="line">       <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">       <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">EditText</span></span><br><span class="line">          <span class="attribute">android:layout_width</span>=<span class="value">"0dp"</span></span><br><span class="line">          <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">          <span class="attribute">android:layout_weight</span>=<span class="value">"1"</span></span><br><span class="line">          <span class="attribute">android:hint</span>=<span class="value">"input your message"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">Button</span></span><br><span class="line">          <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">          <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">          <span class="attribute">android:text</span>=<span class="value">"Send"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>注意:</p>
<ul>
<li><code>android:divider=&quot;#0000&quot;</code>该项用于设置ListView的的分割线为透明</li>
<li>输入框和button通过LinearLaout绑定在一起</li>
<li>最外<code>LinearLayout</code>的<code>orientation</code>设置为<code>vertical</code>是让<code>ListView</code>和内LinearLayout上下放置</li>
<li>ListView设置<code>height = &quot;0dp&quot;</code> <code>weight = &quot;1&quot;</code>切内LinearLayout无设置，意思就是，在保证内LinearLayout的区域大小后，其他空间都归ListView，同理内LinearLayout的EditText和Button</li>
</ul>
<h3 id="Item类">Item类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Item</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> SEND = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> REC = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> type;</span><br><span class="line">    <span class="keyword">private</span> String content;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Item</span><span class="params">(<span class="keyword">int</span> wtype, String content)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.type = wtype;</span><br><span class="line">        <span class="keyword">this</span>.content = content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getContent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> content;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注意：</p>
<ul>
<li>如果要在MainActivity中使用SEND来给一个Item对象赋值，那么这个SEND常量就一定得在Item类中定义</li>
</ul>
<h3 id="Item类对象的集合-&gt;初始化该集合">Item类对象的集合-&gt;初始化该集合</h3><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> List&lt;Item&gt; mesgs = <span class="keyword">new</span> ArrayList&lt;Item&gt;();</span><br><span class="line"></span><br><span class="line"> <span class="keyword">private</span> <span class="keyword">void</span> initData() &#123;</span><br><span class="line">        Item con_a = <span class="keyword">new</span> Item(Item.REC,<span class="string">"hello my name is Gaby"</span>);</span><br><span class="line">        mesgLists.<span class="built_in">add</span>(con_a);</span><br><span class="line">        Item con_b = <span class="keyword">new</span> Item(Item.SEND,<span class="string">"Hi,Gaby! I'm Cici"</span>);</span><br><span class="line">        mesgLists.<span class="built_in">add</span>(con_b);</span><br><span class="line">        Item con_c = <span class="keyword">new</span> Item(Item.SEND,<span class="string">"where are you come from?"</span>);</span><br><span class="line">        mesgLists.<span class="built_in">add</span>(con_c);</span><br><span class="line">        Item con_d = <span class="keyword">new</span> Item(Item.REC,<span class="string">"I'm from China"</span>);</span><br><span class="line">        mesgLists.<span class="built_in">add</span>(con_d);</span><br><span class="line"></span><br><span class="line">        Item con_e = <span class="keyword">new</span> Item(Item.SEND,<span class="string">"oh? I come from Japan"</span>);</span><br><span class="line">        mesgLists.<span class="built_in">add</span>(con_d);</span><br><span class="line"></span><br><span class="line">        Item con_f = <span class="keyword">new</span> Item(Item.REC,<span class="string">"so you must know yui hatano"</span>);</span><br><span class="line">        mesgLists.<span class="built_in">add</span>(con_f);</span><br><span class="line"></span><br><span class="line">        Item con_g = <span class="keyword">new</span> Item(Item.SEND,<span class="string">"I do,she is the best"</span>);</span><br><span class="line">        mesgLists.<span class="built_in">add</span>(con_g);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h3 id="item_layout单项布局">item_layout单项布局</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">LinearLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">android:orientation</span>=<span class="value">"vertical"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">LinearLayout</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/left"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:background</span>=<span class="value">"@drawable/qq"</span></span><br><span class="line">        <span class="attribute">android:layout_gravity</span>=<span class="value">"left"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/tv_left"</span></span><br><span class="line">            <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">            <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">            /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">LinearLayout</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/right"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_gravity</span>=<span class="value">"right"</span></span><br><span class="line">        <span class="attribute">android:background</span>=<span class="value">"@drawable/oo"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/tv_right"</span></span><br><span class="line">            <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">            <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>注意:</p>
<ul>
<li><code>android:orientation=&quot;vertical&quot;</code>以及两个LinearLayout中各自的<code>android:layout_gravity=&quot;left&quot;</code> <code>android:layout_gravity=&quot;right&quot;</code><br>使得单项布局中的两个对话框一左一右垂直排列<br><a href="http://ww3.sinaimg.cn/large/85184d39gw1eyxy1byy9aj205f03eglg.jpg" target="_blank" rel="external">item_layout</a></li>
<li>实际上对话框中带有TextView,因为LinearLayout中的两个属性都是<code>wrap_content</code></li>
</ul>
<p>adapter类<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">mess_adapter</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">ArrayAdapter&lt;Item&gt;</span>&#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> int resourceId;</span><br><span class="line"></span><br><span class="line">    public mess_adapter(<span class="type">Context</span> context,int textViewResourceId, <span class="type">List</span>&lt;<span class="type">Item</span>&gt; objects) &#123;</span><br><span class="line">        <span class="keyword">super</span>(context,textViewResourceId, objects);</span><br><span class="line">           resourceId = textViewResourceId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    public <span class="type">View</span> getView(int position, <span class="type">View</span> convertView, <span class="type">ViewGroup</span> parent) &#123;</span><br><span class="line">        <span class="type">View</span> view;</span><br><span class="line">        <span class="type">ViewHolder</span> viewHolder;</span><br><span class="line">        <span class="type">Item</span> item = getItem(position);</span><br><span class="line">        <span class="keyword">if</span>(convertView == <span class="literal">null</span>)&#123;</span><br><span class="line">            viewHolder = <span class="keyword">new</span> <span class="type">ViewHolder</span>();</span><br><span class="line">            view = <span class="type">LayoutInflater</span>.from(getContext()).inflate(resourceId,<span class="literal">null</span>);</span><br><span class="line">            viewHolder.left_layout = (<span class="type">LinearLayout</span>) view.findViewById(<span class="type">R</span>.id.left);</span><br><span class="line">            viewHolder.right_layout = (<span class="type">LinearLayout</span>) view.findViewById(<span class="type">R</span>.id.right);</span><br><span class="line">            viewHolder.tv_right = (<span class="type">TextView</span>) view.findViewById(<span class="type">R</span>.id.tv_right);</span><br><span class="line">            viewHolder.tv_left = (<span class="type">TextView</span>) view.findViewById(<span class="type">R</span>.id.tv_left);</span><br><span class="line">            view.setTag(viewHolder);</span><br><span class="line">        &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">            view = convertView;</span><br><span class="line">            viewHolder = (<span class="type">ViewHolder</span>) view.getTag();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(item.getType() == <span class="type">Item</span>.<span class="type">SEND</span>)&#123;<span class="comment">//send is in the left</span></span><br><span class="line">            viewHolder.right_layout.setVisibility(<span class="type">View</span>.<span class="type">GONE</span>);</span><br><span class="line">            viewHolder.tv_left.setText(item.getContent());</span><br><span class="line">        &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">            viewHolder.left_layout.setVisibility(<span class="type">View</span>.<span class="type">GONE</span>);</span><br><span class="line">            viewHolder.tv_right.setText(item.getContent());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> view;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">ViewHolder</span>&#123;</span></span><br><span class="line">        <span class="type">LinearLayout</span> left_layout;</span><br><span class="line">        <span class="type">LinearLayout</span> right_layout;</span><br><span class="line">        <span class="type">TextView</span> tv_left;</span><br><span class="line">        <span class="type">TextView</span> tv_right;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>注意：</p>
<ul>
<li>因为不能通过一个布局去取得布局中的控件，也因此，每个控件都设置id</li>
<li>viewHolder存放着四个控件实例</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="使用draw9patch">使用draw9patch</h3><ol>
<li>打开内置terminal</li>
<li>输入<code>CD C:\Users\Gaby\AppData\Local\Android\sdk</code></li>
<li>在该目录下输入<code>draw9patch</code></li>
<li>导入图片，开始绘制</li>
<li>本文成果图:</li>
</ol>
<p><img src="http://ww1.sinaimg.cn/large/85184d39gw1eyxyeov7zaj20an0hmmya.jpg" alt="成果图"></p>
<ol>
<li>左边和上边绘制的黑线，表示在纵向和横向拉伸时拉伸的部分。右边和下边的黑线表示要用于显示内容的部分</li>
<li>从图片上可以看出，右边和下边的黑线可以偏中间一点</li>
</ol>]]>
    
    </summary>
    
      <category term="android" scheme="http://gabygoole.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[自定义控件类]]></title>
    <link href="http://gabygoole.com/2015/12/13/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6%E7%B1%BB/"/>
    <id>http://gabygoole.com/2015/12/13/自定义控件类/</id>
    <published>2015-12-13T03:47:12.000Z</published>
    <updated>2015-12-30T17:03:10.538Z</updated>
    <content type="html"><![CDATA[<p>在自定义标题栏时，自定义的标题栏总会置于系统自带的标题栏之下，于是在<code>activity_main.xml</code>中发现了这样一部分内容<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;android<span class="class">.support</span><span class="class">.design</span><span class="class">.widget</span><span class="class">.AppBarLayout</span></span><br><span class="line">    android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">    android:theme=<span class="string">"@style/AppTheme.AppBarOverlay"</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;android<span class="class">.support</span><span class="class">.v7</span><span class="class">.widget</span><span class="class">.Toolbar</span></span><br><span class="line">        android:id=<span class="string">"@+id/toolbar"</span></span><br><span class="line">        android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">        android:layout_height=<span class="string">"?attr/actionBarSize"</span></span><br><span class="line">        android:<span class="attribute">background</span>=<span class="string">"?attr/colorPrimary"</span></span><br><span class="line">        app:popupTheme=<span class="string">"@style/AppTheme.PopupOverlay"</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/android<span class="class">.support</span><span class="class">.design</span><span class="class">.widget</span><span class="class">.AppBarLayout</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;include layout=<span class="string">"@layout/content_main"</span> /&gt;</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">include</span> layout=<span class="string">"@layout/content_main"</span> /&gt; <span class="regexp">//</span>此为引入布局的方法</span><br></pre></td></tr></table></figure>
<p>末尾一句引入<code>content_main</code>布局,而<code>content_main.xml</code>中也只引入了自定义的<code>titlebar.xml</code>标题栏布局，因此<code>&lt;include layout=&quot;@layout/content_main&quot; /&gt;</code>之上的内容即为系统自带的标题栏布局，删掉即可。接着在MainActivity中删除看起来是绑定标题栏一类的东西<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Toolbar toolbar = <span class="list">(<span class="keyword">Toolbar</span>)</span> findViewById<span class="list">(<span class="keyword">R</span>.id.toolbar)</span><span class="comment">;</span></span><br><span class="line">       setSupportActionBar<span class="list">(<span class="keyword">toolbar</span>)</span><span class="comment">;</span></span><br></pre></td></tr></table></figure></p>
<p>标题栏就出现了<br><img src="http://7xp3l1.com1.z0.glb.clouddn.com/8~S0`MNXD_DB~_7%25(J6H(4V.png" alt="自定义titlebar"><br>///////////////////////////////////////////////////////////////<br>设置自定义控件<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//自定义控件类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TitleLayout</span> <span class="keyword">extends</span> <span class="title">LinearLayout</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span></span>&#123;</span><br><span class="line">    <span class="comment">//在布局中引入该控件会调用该构造函数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TitleLayout</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">        LayoutInflater.from(context).inflate(R.layout.title,<span class="keyword">this</span>);<span class="comment">//前者为加载指定布局，后者为指定布局添加一个父布局，即为TitleLayout这个布局</span></span><br><span class="line">        Button btn_back = (Button) findViewById(R.id.back);</span><br><span class="line">        Button btn_edit = (Button) findViewById(R.id.edit);</span><br><span class="line">        btn_back.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        btn_edit.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (v.getId())&#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.back:</span><br><span class="line">                ((Activity) getContext()).finish();<span class="comment">//这句话要注意</span></span><br><span class="line">            <span class="keyword">case</span> R.id.edit:</span><br><span class="line">                Toast.makeText(getContext(),<span class="string">"you edit?"</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>需要注意的是，既然是写一个控件类出来，所加载的布局文件<code>R.layout.title</code>就相当于和该类捆绑了起来，在不同的活动中使用该控件亦是创建了不同的对象。也因此，只需要注重第一次编写该类时的逻辑关系即可</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>在自定义标题栏时，自定义的标题栏总会置于系统自带的标题栏之下，于是在<code>activity_main.xml</code>中发现了这样一部分内容<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;android<span class="class">.support</span><span class="class">.design</span><span class="class">.widget</span><span class="class">.AppBarLayout</span></span><br><span class="line">    android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">    android:theme=<span class="string">"@style/AppTheme.AppBarOverlay"</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;android<span class="class">.support</span><span class="class">.v7</span><span class="class">.widget</span><span class="class">.Toolbar</span></span><br><span class="line">        android:id=<span class="string">"@+id/toolbar"</span></span><br><span class="line">        android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">        android:layout_height=<span class="string">"?attr/actionBarSize"</span></span><br><span class="line">        android:<span class="attribute">background</span>=<span class="string">"?attr/colorPrimary"</span></span><br><span class="line">        app:popupTheme=<span class="string">"@style/AppTheme.PopupOverlay"</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/android<span class="class">.support</span><span class="class">.design</span><span class="class">.widget</span><span class="class">.AppBarLayout</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;include layout=<span class="string">"@layout/content_main"</span> /&gt;</span><br></pre></td></tr></table></figure></p>]]>
    
    </summary>
    
      <category term="android" scheme="http://gabygoole.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[初探ListView和Adapter]]></title>
    <link href="http://gabygoole.com/2015/12/12/%E5%88%9D%E6%8E%A2ListView%E5%92%8CAdapter/"/>
    <id>http://gabygoole.com/2015/12/12/初探ListView和Adapter/</id>
    <published>2015-12-11T17:06:19.000Z</published>
    <updated>2015-12-13T04:19:57.598Z</updated>
    <content type="html"><![CDATA[<p>关于Android Adapter（适配器），参考<a href="http://www.cnblogs.com/devinzhang/archive/2012/01/20/2328334.html" target="_blank" rel="external">Devin Zhang’s blog</a>。简单的说，Adapter起到的作用是使得前端的显示和后端的数据能够适配，用以下代码作为例子<br><a id="more"></a></p>
<figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> class MainActivity extends Activity&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;fruit&gt; myFruits = <span class="keyword">new</span> ArrayList&lt;fruit&gt;();<span class="comment">//将数据定义为实例</span></span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        initialFruits();</span><br><span class="line">        setContentView(R.layout.activity_main);<span class="comment">//与R.layout.activity_main布局绑定</span></span><br><span class="line">        ListView lv = (ListView) findViewById(R.id.lv);</span><br><span class="line">        fruitAdapter adapter = <span class="keyword">new</span> fruitAdapter(MainActivity.<span class="keyword">this</span>,R.layout.list_item,myFruits);<span class="comment">//fruitAdpter的三个参数依次为，上下文context,ListView单项布局文件，集合类型的数据</span></span><br><span class="line">        lv.setAdapter(adapter);<span class="comment">//用adapter做适配器（就理解为ListView看得懂并且存放有数据的容器）</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//初始化实例变量myFruits</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> initialFruits()&#123;</span><br><span class="line">        fruit orange = <span class="keyword">new</span> fruit(<span class="string">"orange"</span>,R.drawable.pa);</span><br><span class="line">        myFruits.<span class="built_in">add</span>(orange);</span><br><span class="line">        fruit grape = <span class="keyword">new</span> fruit(<span class="string">"grape"</span>,R.drawable.pb);</span><br><span class="line">        myFruits.<span class="built_in">add</span>(grape);</span><br><span class="line">        fruit milk = <span class="keyword">new</span> fruit(<span class="string">"milk"</span>,R.drawable.pc);</span><br><span class="line">        myFruits.<span class="built_in">add</span>(milk);</span><br><span class="line">        fruit bean = <span class="keyword">new</span> fruit(<span class="string">"bean"</span>,R.drawable.pd);</span><br><span class="line">        myFruits.<span class="built_in">add</span>(bean);</span><br><span class="line">        fruit kid = <span class="keyword">new</span> fruit(<span class="string">"kid"</span>,R.drawable.pe);</span><br><span class="line">        myFruits.<span class="built_in">add</span>(kid);</span><br><span class="line">        fruit banana = <span class="keyword">new</span> fruit(<span class="string">"banana"</span>,R.drawable.pf);   </span><br><span class="line">        myFruits.<span class="built_in">add</span>(banana);</span><br><span class="line">        fruit lamp = <span class="keyword">new</span> fruit(<span class="string">"lamp"</span>,R.drawable.pg);</span><br><span class="line">        myFruits.<span class="built_in">add</span>(lamp);</span><br><span class="line">        fruit hack = <span class="keyword">new</span> fruit(<span class="string">"hack"</span>,R.drawable.ph);</span><br><span class="line">        myFruits.<span class="built_in">add</span>(hack);</span><br><span class="line">        fruit keyboard = <span class="keyword">new</span> fruit(<span class="string">"keyboard"</span>,R.drawable.pi);</span><br><span class="line">        myFruits.<span class="built_in">add</span>(keyboard);</span><br><span class="line">        fruit water = <span class="keyword">new</span> fruit(<span class="string">"water"</span>,R.drawable.pj);</span><br><span class="line">        myFruits.<span class="built_in">add</span>(water);</span><br><span class="line">        fruit mouse = <span class="keyword">new</span> fruit(<span class="string">"mouse"</span>,R.drawable.pk);</span><br><span class="line">        myFruits.<span class="built_in">add</span>(mouse);</span><br><span class="line">        fruit ear = <span class="keyword">new</span> fruit(<span class="string">"ear"</span>,R.drawable.pl);</span><br><span class="line">        myFruits.<span class="built_in">add</span>(ear);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>关于<code>fruitAdapter</code>类</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">fruitAdapter</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">ArrayAdapter&lt;fruit&gt;</span>&#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> int resourceId;</span><br><span class="line">    <span class="comment">//textViewResourceId即为传入的ListView的单项布局文件id</span></span><br><span class="line">    public fruitAdapter(<span class="type">Context</span> context,int textViewResourceId, <span class="type">List</span>&lt;fruit&gt; objects) &#123;</span><br><span class="line">        <span class="keyword">super</span>(context, textViewResourceId, objects);</span><br><span class="line">        <span class="comment">//adapter对象的resourceId实例变量保存ListView的单项布局文件id，以供getView()使用</span></span><br><span class="line">        resourceId = textViewResourceId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//在每个子项被滚动到屏幕内的时候调用getView()</span></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    public <span class="type">View</span> getView(int position, <span class="type">View</span> convertView, <span class="type">ViewGroup</span> parent) &#123;</span><br><span class="line">        fruit newFruit = getItem(position);</span><br><span class="line">        <span class="type">View</span> view = <span class="type">LayoutInflater</span>.from(getContext()).inflate(resourceId,<span class="literal">null</span>);</span><br><span class="line">        <span class="type">ImageView</span> imageView = (<span class="type">ImageView</span>) view.findViewById(<span class="type">R</span>.id.fruit_image);</span><br><span class="line">        <span class="type">TextView</span> textView = (<span class="type">TextView</span>) view.findViewById(<span class="type">R</span>.id.fruit_name);</span><br><span class="line">        imageView.setImageResource(newFruit.getId());</span><br><span class="line">        textView.setText(newFruit.getName());</span><br><span class="line">        <span class="keyword">return</span>  view;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>对于getView(),《第一行代码》中给出的解释是“在每个子项被滚动到屏幕内的时候会被调用”。这句话的另一层意思是：凡是ListView中可见的子项，均调用了<code>getView()</code>方法。事实上也只能如此，因为在构造函数中并未告诉ListView如何呈现样式。也因此呢，整个ListView的过程是：创建Adapter(需调用构造函数)-&gt;特定的ListView指定该Adapter-&gt;在屏幕需要显示子项时调用getView()</p>
<p>接着附上<code>fruit</code>类的代码</p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">fruit</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> pic_id;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">fruit</span>(<span class="params">String fname,<span class="keyword">int</span> id</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = fname;</span><br><span class="line">        <span class="keyword">this</span>.pic_id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pic_id;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>最后就出现了这样的ListView<br><img src="http://ww1.sinaimg.cn/large/85184d39gw1eywrs86emxj20e80mrgof.jpg" alt="界面"><br><img src="http://ww1.sinaimg.cn/large/85184d39gw1eywroqv751j20b20ia755.jpg" alt="界面"></p>
<p>这样看来图片的大小得事先选好，图片越大，速度越慢</p>
<p>滑动的时候确实会卡顿，优化如下:<br>getView()的convertView用于缓存加载好的布局，不至于每次有子项滑入屏幕内都要加载一次布局</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在每个子项被滚动到屏幕内的时候调用getView()</span></span><br><span class="line">    @Override</span><br><span class="line">    public <span class="keyword">View</span> getView(int position, <span class="keyword">View</span> convertView, ViewGroup parent) &#123;</span><br><span class="line">        <span class="keyword">View</span> <span class="keyword">view</span>;</span><br><span class="line">        ViewHolder viewHolder;</span><br><span class="line">        fruit myFruit = getItem(position);</span><br><span class="line">        <span class="keyword">if</span>(convertView == null)&#123;</span><br><span class="line">            viewHolder = new ViewHolder();</span><br><span class="line">            <span class="keyword">view</span> = LayoutInflater.from(getContext()).inflate(resourceId,null);</span><br><span class="line">            viewHolder.imageView = (ImageView) <span class="keyword">view</span>.findViewById(R.id.fruit_image);</span><br><span class="line">            viewHolder.textView = (TextView) <span class="keyword">view</span>.findViewById(R.id.fruit_name);</span><br><span class="line">            <span class="keyword">view</span>.setTag(viewHolder);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">view</span> = convertView;</span><br><span class="line">            viewHolder = (ViewHolder) <span class="keyword">view</span>.getTag();</span><br><span class="line">        &#125;</span><br><span class="line">        viewHolder.imageView.setImageResource(myFruit.getId());</span><br><span class="line">        viewHolder.textView.setText(myFruit.getName());</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">view</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>从优化ListView过程中，看出至始至终都是使用第一次加载好的view，索性在view里面再加上存有控件实例的viewHolder</p>
<p>写子项-&gt;适配器-&gt;item-&gt;mainActivity(传数据)</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>关于Android Adapter（适配器），参考<a href="http://www.cnblogs.com/devinzhang/archive/2012/01/20/2328334.html">Devin Zhang’s blog</a>。简单的说，Adapter起到的作用是使得前端的显示和后端的数据能够适配，用以下代码作为例子<br>]]>
    
    </summary>
    
      <category term="android" scheme="http://gabygoole.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[探究android控件及布局]]></title>
    <link href="http://gabygoole.com/2015/12/10/%E6%8E%A2%E7%A9%B6android%E6%8E%A7%E4%BB%B6%E5%8F%8A%E5%B8%83%E5%B1%80/"/>
    <id>http://gabygoole.com/2015/12/10/探究android控件及布局/</id>
    <published>2015-12-10T15:06:29.000Z</published>
    <updated>2015-12-10T15:29:39.347Z</updated>
    <content type="html"><![CDATA[<h2 id="控件(widget)">控件(widget)</h2><h3 id="1-_TextView(该控件的一些需要注意的属性，下同)">1. TextView(该控件的一些需要注意的属性，下同)</h3><p><code>gravity=&quot;center&quot;</code><br><code>textSize=&quot;24sp&quot;</code><br><code>textColor=&quot;#00ff00&quot;</code><br>(完整的前面应该加<code>android:</code>,为了方便均忽略)</p>
<h3 id="2-_EditText">2. EditText</h3><p><code>hint=&quot;Type something here&quot;</code><br><code>maxLines=&quot;2&quot;</code></p>
<h3 id="3-_ImageView">3. ImageView</h3><p><code>src=&quot;@drawable/ic_launcher&quot;</code><br><code>imageView.setImageResoure(R.drawable.jetlly)</code></p>
<h3 id="4-_ProgressBar">4. ProgressBar</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">progressBar.<span class="function"><span class="title">setVisibility</span><span class="params">(View.GONE)</span></span><span class="comment">//设置不可见，且不占用任何空间</span></span><br><span class="line">progressBar.<span class="function"><span class="title">setVisibility</span><span class="params">(View.VISIBLE)</span></span><span class="comment">//设置可见</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>实际上需要去添加逻辑（比如当数据加载完成时执行：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">progressBar.<span class="function"><span class="title">setVisibility</span><span class="params">(View.GONE)</span></span><span class="comment">//设置不可见，且不占用任何空间</span></span><br></pre></td></tr></table></figure></p>
<p>不然，ProgressBar会一直转<br>还有功能：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">progressbar.<span class="function"><span class="title">getVisibility</span><span class="params">()</span></span></span><br><span class="line"><span class="comment">//有三种值：View.GONE,View.VISIBLE</span></span><br></pre></td></tr></table></figure></p>
<p>在ProgressBar参数中<code>style=&quot;?android:attr/progressBarStyleHorizontal&quot;</code><br>可将进度条变成水平,参数<code>max=&quot;100&quot;</code>设置水平进度条的最大值</p>
<h3 id="5-_AlertDialog">5. AlertDialog</h3><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">AlertDialog.Builder dialog = <span class="keyword">new</span> AlertDialog.Builder(MainActivity.<span class="keyword">this</span>);<span class="comment">//可以理解为对话框建立在这个活动之上</span></span><br><span class="line">dialog.setTitle(<span class="string">"This is title"</span>);<span class="comment">//设置对话框的标题</span></span><br><span class="line">dialog.setMessage(<span class="string">"someting important"</span>);<span class="comment">//内容</span></span><br><span class="line">dialog.setCancelable(<span class="literal">false</span>);<span class="comment">//设置该对话框是否可由back键退回</span></span><br><span class="line">dialog.setPositiveButton(<span class="string">"OK"</span>，<span class="keyword">new</span> DialogInterface.OnclickListener()&#123;&#125;)<span class="comment">//为OK键设置监听器</span></span><br><span class="line">dialog.setNegativeButton(<span class="string">"CANCEL"</span>,<span class="keyword">new</span> DialogInterface.OnClickListener()&#123;&#125;)</span><br></pre></td></tr></table></figure>
<p>注意：AlertDialog在程序里面写，不再布局里写</p>
<h3 id="6-_ProgressDialog">6. ProgressDialog</h3><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ProgressDialog progressDialog = <span class="keyword">new</span> ProgressDialog(MainActivity.<span class="keyword">this</span>);</span><br><span class="line">progressDialog.setTitle(<span class="string">"wait a moment!"</span>);</span><br><span class="line">progressDialog.setMessage(<span class="string">"Loding..."</span>);</span><br><span class="line">progressDialog.setCancelable(<span class="literal">false</span>);</span><br><span class="line">progressDialog.show();</span><br></pre></td></tr></table></figure>
<p>与AlertDialog类似</p>
<h2 id="四大布局(Layout)">四大布局(Layout)</h2><h3 id="1-_LinearLayout">1. LinearLayout</h3><h6 id="layout_gravity属性">layout_gravity属性</h6><p><code>orientation</code>的方向一定是与layout_gravity方向正交，解释如下：</p>
<p>如果<code>orientation=&quot;vertical&quot;</code>，那么就只有水平方向的对齐有效<br>此时控件的<code>layout_gravity&quot;</code>就有三种值:  </p>
<ul>
<li>left</li>
<li>center_horizontal</li>
<li>right</li>
</ul>
<p>同理，如果<code>orientation=&quot;horizontal&quot;</code><br>此时控件的<code>layout_gravity</code>有三种值：</p>
<ul>
<li>top</li>
<li>center_vertical</li>
<li>bottom</li>
</ul>
<p>####### layout_weight(权重)<br>若<code>orientation=&quot;horizontal&quot;</code>，此时xml中有<code>EditText</code>和<code>Button</code>，设置他们的<code>layout_width=&quot;0dp&quot;</code>，若设置<code>EditText</code>的<code>layout_weight=&quot;3&quot;</code>,设置<code>Button</code>的<code>layout_weight=&quot;2&quot;</code>,前者占屏幕的3/5，后者占2/5</p>
<h3 id="2-_RelativeLayout">2. RelativeLayout</h3><h6 id="控件相对父布局定位">控件相对父布局定位</h6><ul>
<li>layout_alignParentTop</li>
<li>layout_alignparentBottom</li>
<li>layout_alignParentRight</li>
<li>layout_alignParentLeft</li>
<li>laout_centerInParent</li>
</ul>
<h6 id="控件相对控件定位">控件相对控件定位</h6><ul>
<li>layout_below</li>
<li>layout_toRightOf</li>
<li>layout_toLeftOf</li>
<li>layout_above</li>
</ul>
<h6 id="边缘对齐(就试验的情况下，貌似此处orientation不顶用)">边缘对齐(就试验的情况下，貌似此处orientation不顶用)</h6><ul>
<li>layout_alignLeft</li>
<li>layout_alignRight</li>
<li>layout_alignTop</li>
<li>layout_alignBottom</li>
</ul>
<h3 id="3-_FrameLayout">3. FrameLayout</h3><p>所有控件都摆放在左上角</p>
<h3 id="4-TableLayout">4.TableLayout</h3><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一对这样的标签就表示一行</span></span><br><span class="line">&lt;<span class="keyword">TableRow</span>&gt; </span><br><span class="line">    <span class="comment">//一个组件表示一列</span></span><br><span class="line">&lt;/<span class="keyword">TableRow</span>&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>需要注意的是，《第一行代码》中当一行有<code>TextView</code>和<code>EditText</code>时,<code>TextView</code>只有<code>layout_height</code>属性，这可能是由于TableLayout有自己的关于每行中列宽度的规定，以后遇到这种情况再做更正</li>
<li>合并单元格:<code>layout_span=&quot;2&quot;</code>表示横跨两列</li>
<li>TableLayout头部添加<code>android:stretchColumns=&quot;1&quot;</code>，即将第二列拉伸，<code>0</code>则拉伸第一列</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="控件(widget)">控件(widget)</h2><h3 id="1-_TextView(该控件的一些需要注意的属性，下同)">1. TextView(该控件的一些需要注意的属性，下同)</h3><p><code>gravity=&quot;center&quot;</code><br><code>textSize=&quot;24sp&quot;</code><br><code>textColor=&quot;#00ff00&quot;</code><br>(完整的前面应该加<code>android:</code>,为了方便均忽略)</p>
<h3 id="2-_EditText">2. EditText</h3><p><code>hint=&quot;Type something here&quot;</code><br><code>maxLines=&quot;2&quot;</code></p>
<h3 id="3-_ImageView">3. ImageView</h3><p><code>src=&quot;@drawable/ic_launcher&quot;</code><br><code>imageView.setImageResoure(R.drawable.jetlly)</code></p>
<h3 id="4-_ProgressBar">4. ProgressBar</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">progressBar.<span class="function"><span class="title">setVisibility</span><span class="params">(View.GONE)</span></span><span class="comment">//设置不可见，且不占用任何空间</span></span><br><span class="line">progressBar.<span class="function"><span class="title">setVisibility</span><span class="params">(View.VISIBLE)</span></span><span class="comment">//设置可见</span></span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="android" scheme="http://gabygoole.com/tags/android/"/>
    
      <category term="android控件及布局" scheme="http://gabygoole.com/tags/android%E6%8E%A7%E4%BB%B6%E5%8F%8A%E5%B8%83%E5%B1%80/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[购买域名、设置DNS]]></title>
    <link href="http://gabygoole.com/2015/12/09/%E8%B4%AD%E4%B9%B0%E5%9F%9F%E5%90%8D%E3%80%81%E8%AE%BE%E7%BD%AEDNS/"/>
    <id>http://gabygoole.com/2015/12/09/购买域名、设置DNS/</id>
    <published>2015-12-09T09:01:28.000Z</published>
    <updated>2015-12-09T11:32:53.215Z</updated>
    <content type="html"><![CDATA[<h2 id="前往GoDaddy购买域名">前往GoDaddy购买域名</h2><p>如果翻墙上GoDaddy可能会被认为是老外，因而没有支付宝支付选项<br>解决办法：不建议清除cookies，推荐换个浏览器</p>
<h2 id="前往github上gabygoole-github-io仓库">前往github上gabygoole.github.io仓库</h2><p>新建一个CNAME文件，填入买的域名:gabygoole.com<br><a id="more"></a><br><img src="http://ww3.sinaimg.cn/large/85184d39gw1eytjrecsnlj20td03lwf5.jpg" alt="ba"></p>
<h2 id="更改DNS服务商">更改DNS服务商</h2><h3 id="1-_godaddy是与域名提供商，DNSPOD提供域名解析">1. godaddy是与域名提供商，DNSPOD提供域名解析</h3><p><img src="http://ww3.sinaimg.cn/large/85184d39gw1eytj3tizjmj207z05at8y.jpg" alt="ma"></p>
<h3 id="2-_点击Manage_my_Domains,跳转到">2. 点击Manage my Domains,跳转到</h3><p><img src="http://ww2.sinaimg.cn/large/85184d39gw1eytjc6cxx4j20g00ajdgo.jpg" alt="qa"></p>
<h3 id="3-_接着点击manage_DNS">3. 接着点击manage DNS</h3><p><img src="http://ww4.sinaimg.cn/large/85184d39gw1eytji78dwvj20pg0aymzb.jpg" alt="ga"></p>
<h3 id="4-_点击左侧SETTEINGS">4. 点击左侧SETTEINGS</h3><p><img src="http://ww1.sinaimg.cn/large/85184d39gw1eytj7g13b6j20iq09dmy0.jpg" alt="ha"></p>
<h3 id="5-_接着点击NameServers-&gt;manage">5. 接着点击NameServers-&gt;manage</h3><p>设置如下：<br><img src="http://ww3.sinaimg.cn/large/85184d39gw1eytjaqiugbj20km0b440b.jpg" alt="ta"></p>
<h3 id="6-_等上一段时间,当域名解析商更改为dnspod后">6. 等上一段时间,当域名解析商更改为dnspod后</h3><h2 id="前往DNSPOD">前往DNSPOD</h2><h3 id="1-_注册后，添加域名：">1. 注册后，添加域名：</h3><p><img src="http://ww1.sinaimg.cn/large/85184d39gw1eytjjggtqkj20pk05j3yx.jpg" alt="ra"></p>
<h3 id="2-_增加这三项纪录，通向github的">2. 增加这三项纪录，通向github的</h3><p><img src="http://ww1.sinaimg.cn/large/85184d39gw1eytjma67xej20lr03sq3h.jpg" alt="aa"><br>注意是：gabygoole.github.io</p>
<h2 id="现在就可以访问">现在就可以访问</h2><p><a href="&quot;gabygoole.com&quot;">GabyGoole’s blog</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="前往GoDaddy购买域名">前往GoDaddy购买域名</h2><p>如果翻墙上GoDaddy可能会被认为是老外，因而没有支付宝支付选项<br>解决办法：不建议清除cookies，推荐换个浏览器</p>
<h2 id="前往github上gabygoole-github-io仓库">前往github上gabygoole.github.io仓库</h2><p>新建一个CNAME文件，填入买的域名:gabygoole.com<br>]]>
    
    </summary>
    
      <category term="hexo" scheme="http://gabygoole.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[探究adroid活动]]></title>
    <link href="http://gabygoole.com/2015/12/08/%E6%8E%A2%E7%A9%B6adroid%E6%B4%BB%E5%8A%A8/"/>
    <id>http://gabygoole.com/2015/12/08/探究adroid活动/</id>
    <published>2015-12-08T14:19:38.000Z</published>
    <updated>2015-12-09T11:32:51.638Z</updated>
    <content type="html"><![CDATA[<h2 id="Intent用处">Intent用处</h2><p>隐式使用intent，在被启动的activity的manifest文件配置该活动<action> <category><br>在出发活动建立intent时就写好<action>和<category></category></action></category></action></p>
<p>网页浏览器用new intent 时用Intent.ACTION_VIEW<br>其在activity的manifest文件下的intent filter值为android.intent.action.VIEW<br><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Intent</span> <span class="type">intent</span> = new <span class="type">Intent</span>(<span class="type">Intent</span>.ACTION_VIEW);//设置<span class="keyword">action</span></span><br><span class="line"><span class="type">intent</span>.setData(Uri.parse(<span class="string">"http://www.baidu.com"</span>));//将网址解析成一个Uri对象</span><br><span class="line">startActivity(<span class="type">intent</span>)//该方法会自动加上category为默认的android.<span class="type">intent</span>.category.<span class="keyword">DEFAULT</span></span><br></pre></td></tr></table></figure></p>
<p>调用系统内置的拨号界面，new intent 时使用Intent.ACTION_DIAL<br>其值为android.intent.action.<br><a id="more"></a></p>
<h2 id="退出一个活动回传数据">退出一个活动回传数据</h2><p>在一个活动中使用startActivityForResult（intent,requestcode）,在被启动的Activity中setResult（resultcode,intent ）</p>
<p>当界面finish或者back时，会回调启动方activity的onActivityResult（requestcode,resultcode ,Intent data）方法</p>
<p>这个requestcode是启动方activity，在启动其他activity时，所用到的请求码，用于标识是哪个活动回调了这个方法,resultcode是被调用活动返回的结果码，通常RESULT_OK/RESULT_CANCEL</p>
<p>Intent data即为被调用活动 返回的intent</p>
<p>data.getStringExtra（”键”）</p>
<p>intent.putExtra(“键”，“键值”)</p>
<p>在覆写onBackPressed 去掉 ，能起到应该要有的输出的效果<br>super.onBackPressed();</p>
<h2 id="活动的生命周期">活动的生命周期</h2><h3 id="1-_活动生命周期分类：">1. 活动生命周期分类：</h3><p>完整生存期：onCreate&lt;-&gt;onDestroy<br>可见生存期：onStart&lt;-&gt;onStop<br>前台生存期：onResume&lt;-&gt;onPause<br>出现rendering problems时，可更改主题或降低android版本，均可在在手机preview上方更改</p>
<h3 id="2-_对话框活动和普通活动区别">2. 对话框活动和普通活动区别</h3><ul>
<li>当从A活动跳转到B活动，A活动会执行onPause-&gt;onStop,如果此时返回A，A活动执行onRestart-&gt;onStart-&gt;onResume</li>
<li>如果从A活动跳转到对话框类型的B活动，A活动只会执行onPause,返回时执行onResume</li>
</ul>
<p>在活动完全不可见(这里的可见与否，指的是用户还能不能看到.当B活动覆盖A活动时，A活动那个就不可见了.而A活动弹出对话框B，A活动依旧可见，就只会执行onPause())的时候执行onStop()</p>
<p>要将一个活动注册为对话框格式，只需在manifest文件下对活动进行注册<br><code>&lt;activity android:name=&quot;.DialogActivity&quot; android:theme=&quot;@android:style/Theme.Dialog&quot;&gt;&lt;/activity&gt;</code></p>
<h3 id="3-_活动在意外情况下被回收后，返回该活动，该如何保存原有的数据？">3. 活动在意外情况下被回收后，返回该活动，该如何保存原有的数据？</h3><p>如果A活动跳转到B活动，A活动会onPause-&gt;onStop,这时候系统如果内存不足，A活动就会被回收，若此时从B活动退回A活动，就不会再执行A活动的onStart（因为活动已被回收），现在执行onCreate，新建活动,为了能呈现活动被回收前的的状态/数据，Activity里面有个method–onSaveInstanceState(Bundle outstate),这个方法能保证在活动被回收前将数据/状态存储在outstate这个Bundle中，待到该活动被回收后，重新onCreate(Bundle savedInstanceState),savedInstanceState就不再为null，而是outstate这个bundle，所以在onCreate(Bundle savedInstanceState)函数中加入判断savedInstanceState是否为空可<br>预防活动在系统内存不够时被回收，而返回该活动后原有的数据不在的情况</p>
<h3 id="4-_总结下，Intent传入数据和取用数据的方法：">4. 总结下，Intent传入数据和取用数据的方法：</h3><p>Intent intent = new Intent();<br>intent.putExtra(“键”，”键值”);<br>intent.getStringExtra（”键”）;<br>Bundle传入数据和取用数据的方法：<br>Bundle bundle = new Bundle();<br>bundle.putString(“键”,”键值”);<br>bundle.getString(“键”);</p>
<h2 id="活动的状态：">活动的状态：</h2><h3 id="1-_standard">1. standard</h3><p>可在Manifest文件下配置活动的启动模式，默认的是standard，每次启动都会产生创建一个新的实例</p>
<h3 id="2-_singleTop">2. singleTop</h3><p>如果发现返回栈的栈顶已经是该活动，就不会再创建新的活动实例。若从A跳转到B活动，此时B活动位于栈顶，若此时再按下按钮到A活动，A活动会被创建新的实例，因为A不在栈顶</p>
<h3 id="3-_singleTask">3. singleTask</h3><p>从A活动跳转到B活动，再从B跳转到A，系统首先检查返回栈，如果有该活动，其上所有活动全出栈.需要特别注意的是，在B-&gt;A过程实地运行时，过程：是A先restart,后B onDestroy</p>
<p>是通过直接出栈其上活动来重启该活动</p>
<h3 id="4-_singleInstance">4. singleInstance</h3><p>在一个应用程序中，如果某个活动启动模式是singleInstance,该活动会单独存在于一个返回栈（getTaskId()可用于该活动存在的返回栈编号），该活动也可被其他应用程序使用，<br>应用程序中其他活动同属于一个返回栈</p>
<p>例：A(返回栈1)-&gt;B(返回栈2)-&gt;C(返回栈1)<br>点击Back键返回A活动，再Back，到B活动，返回栈1空，再Back，返回栈2空，即退出程序</p>
<h2 id="关于活动的几个小窍门：">关于活动的几个小窍门：</h2><h3 id="1-_接手一个项目，不知道界面对应的活动是哪一个，方法:">1. 接手一个项目，不知道界面对应的活动是哪一个，方法:</h3><p>新建一个class让他继承自Activity，无需再Manifest文件中注册<br>让其余活动继承自该class。这些活动间接继承自Activity，依旧拥有Activity的功能<br>只是每个活动onCreate(),都会去执行父类的onCreate函数，进而打印出该活动的类名</p>
<h3 id="2-_随时随地退出程序：">2. 随时随地退出程序：</h3><p>注意：按下home键，活动会执行oonPause-&gt;onStop,因为活动都完全不可见了，这叫做程序被挂起</p>
<p>建立一个集合类ActivityCollector(),对所有的活动进行管理，这里面所有方法和实例变量均采用public static,其他类可直接引用</p>
<p>通过建立一个继承自Activity的基类，再让其他的三个活动继承自该基类，在该基类的onCreate()函数代码如下：<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        ActivityCollector.addActivity(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>那么每一个活动的onCreate()函数均执行其父类的onCreate()函数<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br></pre></td></tr></table></figure></p>
<p>在每个活动创建过程中，均会被集合类ActivityCollector()给收入其activities集合中，附上ActivityCollector的代码：<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//ActivityCollector集合类的代码</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ActivityCollector</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;Activity&gt; activities = <span class="keyword">new</span> ArrayList&lt;Activity&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">addActivity</span>(<span class="params">Activity activity</span>) </span>&#123;</span><br><span class="line">        activities.add(activity);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">removeActivity</span>(<span class="params">Activity activity</span>) </span>&#123;</span><br><span class="line">        activities.remove(activity);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">finishAll</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (Activity activity : activities) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!activity.isFinishing()) &#123;</span><br><span class="line">                activity.finish();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>同理：在每个活动即将被销毁，执行该活动的onDestroy()，<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br></pre></td></tr></table></figure></p>
<p>即会调用父类的onDestroy()如下：<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父类的onDestroy</span></span><br><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        ActivityCollector.removeActivity(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>将此活动从Collector中移除</p>
<p>注意：List中存放的是活动的引用，可直接调用finish()方法，结束该活动<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//需要注意的语法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;Activity&gt; activities = <span class="keyword">new</span> ArrayList&lt;Activity&gt;();</span><br><span class="line"><span class="keyword">for</span>(Activity <span class="string">activity:</span>activities)</span><br></pre></td></tr></table></figure></p>
<h2 id="我的理解：">我的理解：</h2><p><code>class FirstActivity extends Activity</code>表明了这是一种继承自Activity的类，返回栈里的一个个活动相当于是对象。对继承自Activity的类在Manifest里面注册该种活动类应该以怎样的LaunchMode启动。</p>
<h2 id="注意事项">注意事项</h2><p>Gradle build finished with 1 error(s) in 9s 110ms<br>出现这样的错误，通常可能是模拟器开着同样的活动，退出活动，重新运行</p>
<p>要注意setOnclickListener的格式（括号分号）</p>
<p><code>android studio</code>不稳定，遇到<code>android.content.ActivityNotFoundException: Unable to find explicit activity class {com.example.gaby.activitylifecycletest/com.example.gaby.activitylifecycletest.NormalActivity}; have you declared this activity in your AndroidManifest.xml?</code><br>提示在manifest文件下找不到活动，如果确认程序无误，重新run一次就好</p>
<p>在一个类中新建一个常量<br>private static final String TAG = “MAINACTIVITY”</p>
<h2 id="关于活动的几点沉思：">关于活动的几点沉思：</h2><ul>
<li>当我们点击A活动的Back键，活动就执行onDestroy(onDestroy是在活动被销毁之前调用)，执行后活动状态变为销毁状态 </li>
<li>只要按了Back键，虽然打开后台还有那个app，可是这时候启动这个activity又得onCreate()，因为在按下Back键后，活动已执行onDestroy，状态变为销毁状态（系统倾向于回收）</li>
<li>点击Back键的过程是让栈顶活动出栈的过程，每个活动都会执行onPause-&gt;onStop-&gt;onDestroy</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Intent用处">Intent用处</h2><p>隐式使用intent，在被启动的activity的manifest文件配置该活动<action> <category><br>在出发活动建立intent时就写好<action>和<category></p>
<p>网页浏览器用new intent 时用Intent.ACTION_VIEW<br>其在activity的manifest文件下的intent filter值为android.intent.action.VIEW<br><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Intent</span> <span class="type">intent</span> = new <span class="type">Intent</span>(<span class="type">Intent</span>.ACTION_VIEW);//设置<span class="keyword">action</span></span><br><span class="line"><span class="type">intent</span>.setData(Uri.parse(<span class="string">"http://www.baidu.com"</span>));//将网址解析成一个Uri对象</span><br><span class="line">startActivity(<span class="type">intent</span>)//该方法会自动加上category为默认的android.<span class="type">intent</span>.category.<span class="keyword">DEFAULT</span></span><br></pre></td></tr></table></figure></p>
<p>调用系统内置的拨号界面，new intent 时使用Intent.ACTION_DIAL<br>其值为android.intent.action.<br>]]>
    
    </summary>
    
      <category term="android" scheme="http://gabygoole.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用GitHub和Hexo搭建Blog]]></title>
    <link href="http://gabygoole.com/2015/12/02/%E4%BD%BF%E7%94%A8GitHub%E5%92%8CHexo%E6%90%AD%E5%BB%BABlog/"/>
    <id>http://gabygoole.com/2015/12/02/使用GitHub和Hexo搭建Blog/</id>
    <published>2015-12-02T08:53:00.000Z</published>
    <updated>2015-12-03T02:40:11.293Z</updated>
    <content type="html"><![CDATA[<h2 id="Hexo是什么？"><a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>是什么？</h2><p><strong>A fast, simple &amp; powerful blog framework</strong><br>Hexo 是一个快速/简单/强有力的博客框架</p>
<h2 id="基础搭建过程">基础搭建过程</h2><h3 id="1-_安装node-js_和_git">1. 安装<a href="https://nodejs.org/en/" target="_blank" rel="external">node.js</a> 和 <a href="https://git-scm.com/downloads" target="_blank" rel="external">git</a></h3><ul>
<li>npm环境变量配置：node.js中自带npm，所以安装好后在Path处配置环境变量，通常node.js会自动配置：<code>C:\Program Files\nodejs\</code>，但就我遇到的情况，还得更具体到npm的位置，npm命令才能使用，即：<code>C:\Program Files\nodejs\node_modules\npm</code></li>
<li>下载git后，git要先自报家门，参见<a href="http://www.cnblogs.com/gabygoole/p/4972633.html" target="_blank" rel="external">gabygoole’s 博客</a></li>
</ul>
<h3 id="2-_安装Hexo,并hexo一个文件夹">2. 安装Hexo,并hexo一个文件夹</h3><ul>
<li>桌面上打开<code>git bash</code>输入<code>$ npm install -g hexo-cli</code></li>
<li>任意盘下创建你的blog文件夹,在该文件夹根目录下启动<code>git bash</code><br>输入：<code>$hexo init</code><a id="more"></a>
<h3 id="3-_设定主题">3. 设定<a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="external">主题</a></h3></li>
<li>本博客采用<a href="https://github.com/wuchong/jacman" target="_blank" rel="external">jackman</a></li>
<li>修改配置文件参照<a href="http://wuchong.me/blog/2014/11/20/how-to-use-jacman/" target="_blank" rel="external">jark’s blog</a></li>
<li>注意： 在博客根目录下启用<code>git bash</code>输入<code>$git clone https://github.com/wuchong/jacman.git themes/jacman</code><br>其意在将主题clone到博客theme文件夹下，并命名jacman</li>
</ul>
<h3 id="4-_关于博客目录下文件组成">4. 关于博客目录下<a href="https://hexo.io/docs/setup.html" target="_blank" rel="external">文件组成</a></h3><p>.<br>├──node_modules<br>├── _config.yml<br>├── package.json<br>├── scaffolds<br>├── scripts<br>├── source<br>|   ├── _drafts<br>|   └── _posts<br>└── themes</p>
<ul>
<li>_config.yml<br>该文件为网站的配置文件，依照框架的规定，进行配置即可，参见<a href="http://wuchong.me/blog/2014/11/20/how-to-use-jacman/" target="_blank" rel="external">jark’s blog</a></li>
<li>scaffolds<br>每当<code>$ hexo new [layout] &lt;filename&gt;</code>，都会基于<code>scaffolds</code>文件来创建文件，在<code>_config.yml</code>中设定的<code>default_layout: post</code>，默认即是里面的post方式</li>
<li>themes<br>该文件夹下放置博客主题</li>
<li>source<br>即使在根目录下<code>new</code>，也会把文件创建到<code>source/_posts</code>下</li>
<li>node_modules<br>该文件夹下存放npm的插件</li>
</ul>
<h3 id="5-_可能遇到的意外情况">5. 可能遇到的意外情况</h3><ul>
<li>以下操作都在blog目录下操作</li>
<li>第一次generate前执行<code>$npm install hexo-deployer-git --save</code>，然后才能generate和deploy</li>
<li>先有了<code>hexo-migrator-rss</code>这个插件才能迁移<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="constant">Gaby</span><span class="variable">@Gaby</span>-<span class="constant">PC</span> <span class="constant">MINGW64</span> /c/blog</span><br><span class="line"><span class="variable">$ </span>npm install hexo-migrator-rss --save</span><br><span class="line">hexo-migrator-rss<span class="variable">@0</span>.<span class="number">1.2</span> node_modules\hexo-migrator-rss</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>后安装<code>hexo-generator-feed</code>插件，别人能订阅我们搭建的博客，我们也能从自己其他博客通过RSS迁移我们文章到我们搭建的博客<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Gaby@Gaby-PC MINGW64 /c/blog</span><br><span class="line">$ npm install hexo-generator-feed --save</span><br><span class="line">hexo-generator-feed@<span class="number">1.0</span><span class="number">.3</span> node_modules\hexo-generator-feed</span><br><span class="line">├── object-assign@<span class="number">3.0</span><span class="number">.0</span></span><br><span class="line">└── ejs@<span class="number">1.0</span><span class="number">.0</span></span><br></pre></td></tr></table></figure></p>
<p>安装以上插件后执行：<code>$ hexo migrate rss &lt;source&gt;</code> source即为xml路径(网址或者本地路径)</p>
<p>若有任一个插件未安装都将报错如下：<br><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Gaby@Gaby-PC MINGW64 /c/blog</span><br><span class="line">$ hexo migrate rss http://feed.cnblogs.com/blog/u/226073/rss</span><br><span class="line">undefined migrator plugin is<span class="instruction"> not </span>installed.</span><br><span class="line"></span><br><span class="line">Installed migrator plugins:</span><br><span class="line"></span><br><span class="line">For more help, you can<span class="instruction"> check </span>the online docs: http://hexo.io/</span><br></pre></td></tr></table></figure></p>
<p>安装以上<br><code>http://feed.cnblogs.com/blog/u/226073/rss</code><br>这个是<a href="http://www.cnblogs.com/gabygoole/" target="_blank" rel="external">我的博客园博客</a>首页的订阅按钮下的xml地址</p>
<h3 id="6-_参考资源">6. 参考资源</h3><ul>
<li><a href="http://zipperary.com/2013/05/28/hexo-guide-2/" target="_blank" rel="external">zipperary’s hexo教程</a></li>
<li><a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown" target="_blank" rel="external">markdown教程</a></li>
<li><a href="https://hexo.io/docs/" target="_blank" rel="external">hexo文档</a></li>
<li><a href="http://wuchong.me/blog/2014/11/20/how-to-use-jacman/" target="_blank" rel="external">jark’s blog</a></li>
</ul>
<h3 id="7-_感受">7. 感受</h3><ul>
<li>一开始决定使用Hexo在Github搭建自己的博客，单纯的只是为了装X.但在搭建过程中遇到的各种坑及解决的过程让我收益匪浅</li>
<li>不知觉间我都可以给别人提issue，给contributor发邮件，甚至就我遇到的坑，一度有了想重写Hexo doc的想法</li>
<li>看到Jark’s的博客，我明白了写博文不是自我装X，而是真正帮到别人figure out</li>
<li>还注意到hexo-migrator的作者是xuanwo，以前还经常查ACM代码时看过他的博客，同为大学生，这差距真的还挺大的.</li>
</ul>
<h3 id="8-_搭建进度">8. 搭建进度</h3><ul>
<li>[x] 雏形</li>
<li>[ ] 站点的优化<ul>
<li>[ ] 底部各种社交媒体链接</li>
<li>[ ] 买域名</li>
<li>[ ] <a href="http://wuchong.me/blog/2014/11/20/how-to-use-jacman/" target="_blank" rel="external">网站统计</a></li>
</ul>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Hexo是什么？"><a href="https://hexo.io/">Hexo</a>是什么？</h2><p><strong>A fast, simple &amp; powerful blog framework</strong><br>Hexo 是一个快速/简单/强有力的博客框架</p>
<h2 id="基础搭建过程">基础搭建过程</h2><h3 id="1-_安装node-js_和_git">1. 安装<a href="https://nodejs.org/en/">node.js</a> 和 <a href="https://git-scm.com/downloads">git</a></h3><ul>
<li>npm环境变量配置：node.js中自带npm，所以安装好后在Path处配置环境变量，通常node.js会自动配置：<code>C:\Program Files\nodejs\</code>，但就我遇到的情况，还得更具体到npm的位置，npm命令才能使用，即：<code>C:\Program Files\nodejs\node_modules\npm</code></li>
<li>下载git后，git要先自报家门，参见<a href="http://www.cnblogs.com/gabygoole/p/4972633.html">gabygoole’s 博客</a></li>
</ul>
<h3 id="2-_安装Hexo,并hexo一个文件夹">2. 安装Hexo,并hexo一个文件夹</h3><ul>
<li>桌面上打开<code>git bash</code>输入<code>$ npm install -g hexo-cli</code></li>
<li>任意盘下创建你的blog文件夹,在该文件夹根目录下启动<code>git bash</code><br>输入：<code>$hexo init</code>]]>
    
    </summary>
    
      <category term="hexo" scheme="http://gabygoole.com/tags/hexo/"/>
    
  </entry>
  
</feed>
